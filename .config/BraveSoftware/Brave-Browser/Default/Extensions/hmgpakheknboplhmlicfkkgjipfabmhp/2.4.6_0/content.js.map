{"version":3,"file":"content.js","sources":["../../src/lib/checkout/parser/parser.rules.ts","../../src/lib/checkout/parser/parser.utils.ts","../../src/lib/checkout/parser/parser.processor.ts","../../src/lib/checkout/parser/index.ts","../../src/lib/checkout/checkout.types.ts","../../src/lib/extension/management.ts","../../src/lib/extension/message.ts","../../src/lib/updates/types.ts","../../src/lib/extension/storage.ts","../../src/lib/extension/index.ts","../../src/assets/icons/privacy.svg?raw","../../src/lib/utils/utils.ts","../../src/lib/checkout/button.ts","../../src/lib/checkout/interstitial.ts","../../src/lib/checkout/filler/filler.utils.ts","../../src/lib/checkout/filler/index.ts","../../src/types/Event.ts","../../src/lib/checkout/index.ts","../../src/lib/extension/appExtensionApi.ts","../../src/lib/updates/index.ts","../../src/scripts/content.ts"],"sourcesContent":["import type { Selectors } from \"./parser.types\";\n\nfunction billingSelector(selector: string): string {\n  return `[autocomplete~='billing'][autocomplete~='${selector}']`;\n}\n\nconst notHidden = \":not([type='hidden'],[aria-hidden='true'])\";\nexport const autocompleteSelectors = {\n  cvv: `input[autocomplete='cc-csc']${notHidden}`,\n  expiry: `input[autocomplete='cc-exp']${notHidden}`,\n  expMonth: `[autocomplete='cc-exp-month']${notHidden}`,\n  expYear: `[autocomplete='cc-exp-year']${notHidden}`,\n  firstName: `input[autocomplete='cc-given-name']${notHidden}`,\n  lastName: `input[autocomplete='cc-family-name']${notHidden}`,\n  name: `input[autocomplete='cc-name']${notHidden}`,\n  pan: `input[autocomplete='cc-number']${notHidden}`,\n  type: `[autocomplete='cc-type']${notHidden}`,\n\n  // Address fields\n  streetAddress: `input${billingSelector(\"street-address\")}${notHidden}`,\n  addressLine1: `input${billingSelector(\"address-line1\")}${notHidden}`,\n  addressLine2: `input${billingSelector(\"address-line2\")}${notHidden}`,\n  addressLevel2: `input${billingSelector(\"address-level2\")}${notHidden}`, // city\n  addressLevel1: billingSelector(\"address-level1\") + notHidden, // state\n  postalCode: `input${billingSelector(\"postal-code\")}${notHidden}`,\n};\n\n// When a field is found via autocomplete, we want to exclude\n// it from the generic selectors when doing the processing of\n// \"all\" the inputs/selects on the page\nexport const inverseAutocompleteSelectors = {\n  cvv: \"[autocomplete='cc-csc']\",\n  expiry: \"[autocomplete='cc-exp']\",\n  expMonth: \"[autocomplete='cc-exp-month']\",\n  expYear: \"[autocomplete='cc-exp-year']\",\n  firstName: \"[autocomplete='cc-given-name']\",\n  lastName: \"[autocomplete='cc-family-name']\",\n  name: \"[autocomplete='cc-name']\",\n  pan: \"[autocomplete='cc-number']\",\n  type: \"[autocomplete='cc-type']\",\n\n  // Address fields\n  streetAddress: billingSelector(\"street-address\"),\n  addressLine1: billingSelector(\"address-line1\"),\n  addressLine2: billingSelector(\"address-line2\"),\n  addressLevel2: billingSelector(\"address-level2\"), // city\n  addressLevel1: billingSelector(\"address-level1\"), // state\n  postalCode: billingSelector(\"postal-code\"),\n};\n\n// This is the selector we'll use to find all the\n// inputs/selects on the page. We'll also filter out the\n// ones that are already found via autocomplete\nexport const genericSelectors = [\n  \"input:not([type],[disabled],[readonly],[aria-hidden='true'])\",\n  \"input:is([type='text'],[type='number'],[type='tel'],[type='password']):not([disabled],[readonly],[aria-hidden='true'])\",\n];\n\n// Regular expression rules for matching attributes on input/select fields\nexport const matchingRules = {\n  cvv: /cvv|cid|csc|cvd|cvn|cvc|ccv|spc|signature.*panel|secure.*id|sec(urity)?.*code|account.*verification|card.*verification|verification.*(code|number)|credit.*card.*code|security.*number|card.*extra.*code|card.*code/i,\n  expiry: /((card|cc)((.(?!\\s))*)(exp|date))|(exp.*date)|(mm ?\\/ ?yy)/i,\n  expMonth: /((exp|card|cc).*(mo|mm))|^mm$|^month$/i,\n  expYear: /((exp|card|cc).*(yr|yy|year))|^yy$|^year$/i,\n  firstName:\n    /(credit|card|cc|pay|billing).*(((given|first|fore).*(holder|name|owner))|fname)/i,\n  lastName:\n    /(credit|card|cc|pay|billing).*(((family|last|sur).*(holder|name|owner))|lname)/i,\n  name: /(credit|card|cc|pay|billing).*(holder|name|owner)/i,\n  pan: /((card|cc|pay).*(num|#))|creditcard|^pan|AuthorizeNet_ccno|^cc$|^cnb$/i,\n  type: {\n    attrs: /((card|cc|pay).*(type|brand))/i,\n    value: /visa|master\\s?card/i,\n  },\n};\n\nconst denyGiftCardRule =\n  /gift.?card|rewards?.?card|redeemable.?card|payGCNum|gc-/i;\n\nexport const fieldDenyRules = {\n  general: /bank|name|owner|phone|postal|zip/i,\n  giftCard: denyGiftCardRule,\n};\n\nexport const panDenyRules = {\n  general:\n    /address|bank|bankaccount|company|cvv|email|name|owner|phone|postal|promo|zip/i,\n  giftCard: denyGiftCardRule,\n  issueNumber: /issue.?number/i,\n  routingNumber: /routing.?number/i,\n};\n\nexport const nameDenyRule =\n  /cvv|cvc|brand|pan|number|type|exp|month|year|address|shipping|street|account|company|business/i;\n\nexport const lastNameDenyRule = /(credit|card|cc|pay|billing).*(fullname)/i;\n\nexport const domainRules = new Map<string, Selectors>([\n  [\n    \"bestbuy.com\",\n    {\n      pan: \"#number\",\n      expMonth: \"#expMonth\",\n      expYear: \"#expYear\",\n      cvv: \"#cvv\",\n    },\n  ],\n  [\n    \"brownpapertickets.com\",\n    {\n      pan: \"#cc\",\n      cvv: \"[type='text'][name='code']\",\n      expMonth: \"#month\",\n      expYear: \"#year\",\n      type: \"[type='radio'][name='type']\",\n    },\n  ],\n  [\n    // iframe found on costco.com for PAN only\n    \"na.accpg.accertify.net\",\n    {\n      pan: \"#number\",\n    },\n  ],\n  [\n    \"roguefitness.com\",\n    {\n      pan: \"#card_number\",\n      expMonth: \".select.month select\",\n      expYear: \".select.year select\",\n      cvv: \"#cvv\",\n    },\n  ],\n]);\n","import type { Matches } from \"../checkout.types\";\n\nexport function findElementsAsArray(\n  document: Window[\"document\"],\n  selector: string\n): Element[] {\n  return Array.from(document.querySelectorAll(selector));\n}\n\nexport function matchedAllFields(matches: Matches): boolean {\n  return !!(\n    (\n      matches.pan?.length &&\n      matches.cvv?.length &&\n      matches.type?.length &&\n      (matches.expiry?.length ||\n        (matches.expMonth?.length && matches.expYear?.length))\n    )\n    /**\n     * removing name from the checked fields since we aren't\n     * filling them as part of the autofill process (yet)\n\n        matches.name?.length ||\n          (matches.firstName?.length && matches.lastName?.length)\n     */\n  );\n}\n","import type { Matches } from \"../checkout.types\";\nimport {\n  panDenyRules,\n  matchingRules,\n  fieldDenyRules,\n  nameDenyRule,\n  lastNameDenyRule,\n} from \"./parser.rules\";\n\nconst allowedAttrs = [\n  \"autocomplete\",\n  \"class\",\n  \"id\",\n  \"maxlength\",\n  \"name\",\n  \"pattern\",\n  \"placeholder\",\n  \"size\",\n  \"title\",\n] as const;\n\nconst stripCharsRegex = /[^0-9]/g;\n\ntype FieldAttributes = Partial<Record<(typeof allowedAttrs)[number], string>>;\n\nfunction testFieldDenyRules(value: string): boolean {\n  return Object.values(fieldDenyRules).some((rule) => rule.test(value));\n}\n\nfunction getAttributes(\n  el: HTMLInputElement | HTMLSelectElement\n): FieldAttributes {\n  const attrs = Array.from(el.attributes)\n    .filter((attr) => allowedAttrs.includes(attr.name as keyof FieldAttributes))\n    .reduce((acc, attr) => {\n      if (attr.name === \"autocomplete\" && attr.value === \"off\") {\n        return acc;\n      }\n\n      acc[attr.name as keyof FieldAttributes] = attr.value;\n      return acc;\n    }, {} as FieldAttributes);\n\n  return attrs;\n}\n\nfunction matchCvv(attrs: FieldAttributes): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n\n  if (maxlength) {\n    const len = parseInt(maxlength);\n\n    if (len < 3 || len > 4) {\n      return false;\n    }\n  }\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.cvv.test(value);\n\n    if (!match || testFieldDenyRules(value)) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchExpiry(attrs: FieldAttributes): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n\n  if (maxlength && parseInt(maxlength) < 4) {\n    return false;\n  }\n\n  if (size && parseInt(size) < 4) {\n    return false;\n  }\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.expiry.test(value);\n\n    if (!match) {\n      return;\n    }\n\n    // skip if there's a match with either the stand alone month or year regex\n    if (\n      matchingRules.expMonth.test(value) ||\n      matchingRules.expYear.test(value) ||\n      testFieldDenyRules(value)\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchExpMonth(\n  el: HTMLInputElement | HTMLSelectElement,\n  attrs: FieldAttributes\n): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n  const isSelect = el.tagName === \"SELECT\";\n\n  if (maxlength && parseInt(maxlength) > 2) {\n    return false;\n  }\n\n  if (isSelect && (el as HTMLSelectElement).options.length > 13) {\n    return false;\n  }\n\n  if (!isSelect && size && parseInt(size) < 2) {\n    return false;\n  }\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.expMonth.test(value);\n\n    if (\n      !match ||\n      matchingRules.expYear.test(value) ||\n      testFieldDenyRules(value)\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchExpYear(\n  el: HTMLInputElement | HTMLSelectElement,\n  attrs: FieldAttributes\n): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n  const isSelect = el.tagName === \"SELECT\";\n\n  if (maxlength && parseInt(maxlength) > 4) {\n    return false;\n  }\n\n  if (!isSelect && size && parseInt(size) < 2) {\n    return false;\n  }\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.expYear.test(value);\n\n    if (\n      !match ||\n      matchingRules.expMonth.test(value) ||\n      testFieldDenyRules(value)\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchPan(attrs: FieldAttributes): string[] | false {\n  const { maxlength, size, placeholder, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n\n  if (maxlength) {\n    const len = parseInt(maxlength);\n\n    if (len < 14) {\n      return false;\n    }\n  }\n\n  if (size && parseInt(size) < 14) {\n    return false;\n  }\n\n  if (placeholder) {\n    const placeholderStripped = placeholder.replace(stripCharsRegex, \"\");\n\n    if (placeholderStripped.length == 16) {\n      matchedAttrs.push(\"placeholder\");\n    }\n  }\n\n  for (const [key, value] of Object.entries(attr)) {\n    const match = matchingRules.pan.test(value);\n\n    if (!match || matchingRules.cvv.test(value)) {\n      continue;\n    }\n\n    const denyMatch = Object.values(panDenyRules).some((regex) =>\n      regex.test(value)\n    );\n\n    // We want to deny this input if it matches any of the deny rules\n    if (denyMatch) {\n      return false;\n    }\n\n    matchedAttrs.push(key);\n  }\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchName(attrs: FieldAttributes): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.name.test(value);\n\n    if (\n      !match ||\n      nameDenyRule.test(value) ||\n      matchingRules.firstName.test(value) ||\n      (matchingRules.lastName.test(value) && !lastNameDenyRule.test(value))\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchFirstName(attrs: FieldAttributes): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.firstName.test(value);\n\n    if (\n      !match ||\n      nameDenyRule.test(value) ||\n      (matchingRules.lastName.test(value) && !lastNameDenyRule.test(value))\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchLastName(attrs: FieldAttributes): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.lastName.test(value);\n\n    if (\n      !match ||\n      nameDenyRule.test(value) ||\n      lastNameDenyRule.test(value) ||\n      matchingRules.firstName.test(value)\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\nfunction matchType(\n  input: HTMLInputElement | HTMLSelectElement,\n  attrs: FieldAttributes\n): string[] | false {\n  const { maxlength, size, ...attr } = attrs;\n  const matchedAttrs: string[] = [];\n  const radio = input.type === \"radio\";\n\n  if (radio) {\n    // While possible for an input to have multiple labels, it's not common\n    // and we can safely assume that the first label is the most relevant\n    const label = input.labels?.[0]?.innerText || \"\";\n\n    if (matchingRules.type.value.test(label)) {\n      matchedAttrs.push(\"label\");\n    }\n\n    if (matchingRules.type.value.test(input.value)) {\n      matchedAttrs.push(\"value\");\n    }\n  }\n\n  if (input instanceof HTMLSelectElement) {\n    const options = input.options;\n\n    const match = Array.from(options).some(\n      (option) =>\n        matchingRules.type.value.test(option.value) ||\n        matchingRules.type.value.test(option.text)\n    );\n\n    if (match) {\n      matchedAttrs.push(\"options\");\n    }\n  }\n\n  Object.entries(attr).forEach(([key, value]) => {\n    const match = matchingRules.type.attrs.test(value);\n\n    if (\n      !match ||\n      testFieldDenyRules(value) ||\n      (radio && !matchedAttrs.some((key) => key === \"label\" || key === \"value\"))\n    ) {\n      return;\n    }\n\n    matchedAttrs.push(key);\n  });\n\n  return matchedAttrs.length ? matchedAttrs : false;\n}\n\ntype Candidate = {\n  input: HTMLInputElement | HTMLSelectElement;\n  matches: string[];\n  attrs: FieldAttributes;\n};\n\ntype Candidates = Partial<Record<keyof Matches, Candidate[]>>;\n\nexport default async function process(\n  inputs: HTMLInputElement[],\n  radios: HTMLInputElement[],\n  selects: HTMLSelectElement[],\n  currentMatches: Matches\n): Promise<Matches> {\n  const candidates: Candidates = {};\n\n  inputs.forEach((input) => {\n    const attrs = getAttributes(input);\n    const panMatches = !currentMatches.pan && matchPan(attrs);\n    const cvvMatches = !currentMatches.cvv && matchCvv(attrs);\n    const expMonthMatches =\n      !currentMatches.expMonth &&\n      !currentMatches.expiry &&\n      matchExpMonth(input, attrs);\n    const expYearMatches =\n      !currentMatches.expiry &&\n      !currentMatches.expYear &&\n      matchExpYear(input, attrs);\n    const expiryMatches =\n      !currentMatches.expiry &&\n      !(currentMatches.expMonth && currentMatches.expYear) &&\n      !(expMonthMatches && expYearMatches) &&\n      matchExpiry(attrs);\n    const firstNameMatches =\n      input.type === \"text\" &&\n      !currentMatches.name &&\n      !currentMatches.firstName &&\n      matchFirstName(attrs);\n    const lastNameMatches =\n      input.type === \"text\" &&\n      !currentMatches.name &&\n      !currentMatches.lastName &&\n      matchLastName(attrs);\n    const nameMatches =\n      input.type === \"text\" &&\n      !currentMatches.name &&\n      !(currentMatches.firstName && currentMatches.lastName) &&\n      !(firstNameMatches && lastNameMatches) &&\n      matchName(attrs);\n\n    if (panMatches) {\n      candidates.pan ||= [];\n      candidates.pan.push({ input, matches: panMatches, attrs });\n    }\n\n    if (cvvMatches) {\n      candidates.cvv ||= [];\n      candidates.cvv.push({ input, matches: cvvMatches, attrs });\n    }\n\n    if (expiryMatches) {\n      candidates.expiry ||= [];\n      candidates.expiry.push({ input, matches: expiryMatches, attrs });\n    }\n\n    if (expMonthMatches) {\n      candidates.expMonth ||= [];\n      candidates.expMonth.push({ input, matches: expMonthMatches, attrs });\n    }\n\n    if (expYearMatches) {\n      candidates.expYear ||= [];\n      candidates.expYear.push({ input, matches: expYearMatches, attrs });\n    }\n\n    if (firstNameMatches) {\n      candidates.firstName ||= [];\n      candidates.firstName.push({ input, matches: firstNameMatches, attrs });\n    }\n\n    if (lastNameMatches) {\n      candidates.lastName ||= [];\n      candidates.lastName.push({ input, matches: lastNameMatches, attrs });\n    }\n\n    if (nameMatches) {\n      candidates.name ||= [];\n      candidates.name.push({ input, matches: nameMatches, attrs });\n    }\n  });\n\n  if (!currentMatches.type) {\n    radios.forEach((radio) => {\n      const attrs = getAttributes(radio);\n      const typeMatches = matchType(radio, attrs);\n\n      if (typeMatches) {\n        candidates.type ||= [];\n        candidates.type.push({ input: radio, matches: typeMatches, attrs });\n      }\n    });\n  }\n\n  selects.forEach((select) => {\n    let attrs: FieldAttributes;\n\n    // Match against possible expiration selects\n    if (\n      !(currentMatches.expiry && candidates.expiry) &&\n      !(currentMatches.expMonth && candidates.expMonth) &&\n      !(currentMatches.expYear && candidates.expYear)\n    ) {\n      attrs = getAttributes(select);\n\n      const expMonthMatches = matchExpMonth(select, attrs);\n      const expYearMatches = matchExpYear(select, attrs);\n\n      if (expMonthMatches) {\n        candidates.expMonth ||= [];\n        candidates.expMonth.push({\n          input: select,\n          matches: expMonthMatches,\n          attrs,\n        });\n      }\n\n      if (expYearMatches) {\n        candidates.expYear ||= [];\n        candidates.expYear.push({\n          input: select,\n          matches: expYearMatches,\n          attrs,\n        });\n      }\n    }\n\n    // Match against possible type selects\n    if (!currentMatches.type && !candidates.type) {\n      attrs ||= getAttributes(select);\n\n      const typeMatches = matchType(select, attrs);\n\n      if (typeMatches) {\n        candidates.type ||= [];\n        candidates.type.push({ input: select, matches: typeMatches, attrs });\n      }\n    }\n  });\n\n  const matches = Object.entries(candidates).reduce(\n    (acc, [key, candidates]) => {\n      acc[key as keyof Matches] = candidates.map(\n        (candidate) => candidate.input\n      );\n\n      return acc;\n    },\n    {} as Matches\n  );\n\n  return matches;\n}\n","import type { Selectors } from \"./parser.types\";\nimport type { Matches } from \"../checkout.types\";\nimport {\n  domainRules,\n  autocompleteSelectors,\n  inverseAutocompleteSelectors,\n  genericSelectors,\n} from \"./parser.rules\";\nimport { findElementsAsArray, matchedAllFields } from \"./parser.utils\";\nimport processFields from \"./parser.processor\";\n\nexport default class CheckoutParser {\n  private customRules?: Selectors;\n\n  constructor(hostname: string = \"\") {\n    const normalizedHostname = hostname.replace(\"www.\", \"\");\n\n    this.customRules = domainRules.get(normalizedHostname)!;\n  }\n\n  async scan(document: Window[\"document\"] = window.document): Promise<Matches> {\n    const fields: Matches = {};\n    const excludeElements = [];\n\n    const findElements = (selector: string) => {\n      let els = findElementsAsArray(document, selector);\n\n      // Only match on elements that are visible\n      // See the note about returning null on\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n      // @ts-ignore\n      els = els.filter((el) => el.offsetParent !== null);\n      return els.length ? els : false;\n    };\n\n    // Domain specific rules\n    // Match as many fields as possible and if we found all \"required\" fields\n    // then we can return early\n    if (this.customRules) {\n      Object.entries(this.customRules).reduce((acc, [key, value]) => {\n        const matches = findElements(value);\n\n        if (matches) {\n          // @ts-ignore\n          acc[key as keyof Matches] = matches;\n        }\n\n        return acc;\n      }, fields);\n\n      if (matchedAllFields(fields)) {\n        return fields;\n      }\n    }\n\n    // Standardized autocomplete checks\n    const pan = findElements(autocompleteSelectors.pan);\n    const cvv = findElements(autocompleteSelectors.cvv);\n    const type = findElements(autocompleteSelectors.type);\n    const expMonth = findElements(autocompleteSelectors.expMonth);\n    const expYear = findElements(autocompleteSelectors.expYear);\n    const expiry =\n      !(expMonth && expYear) && findElements(autocompleteSelectors.expiry);\n    const firstName = findElements(autocompleteSelectors.firstName);\n    const lastName = findElements(autocompleteSelectors.lastName);\n    const name =\n      !(firstName && lastName) && findElements(autocompleteSelectors.name);\n    const addressLine1 = findElements(autocompleteSelectors.addressLine1);\n    const addressLine2 = findElements(autocompleteSelectors.addressLine2);\n    const addressLevel2 = findElements(autocompleteSelectors.addressLevel2); // city\n    const addressLevel1 = findElements(autocompleteSelectors.addressLevel1); // state\n    const postalCode = findElements(autocompleteSelectors.postalCode); // zip\n    const streetAddress =\n      !(addressLine1 || addressLine2) &&\n      findElements(autocompleteSelectors.streetAddress);\n\n    if (pan) {\n      fields.pan = pan;\n      excludeElements.push(inverseAutocompleteSelectors.pan);\n    }\n\n    if (cvv) {\n      fields.cvv = cvv;\n      excludeElements.push(inverseAutocompleteSelectors.cvv);\n    }\n\n    if (type) {\n      fields.type = type;\n      excludeElements.push(inverseAutocompleteSelectors.type);\n    }\n\n    if (expMonth) {\n      fields.expMonth = expMonth;\n      excludeElements.push(inverseAutocompleteSelectors.expMonth);\n    }\n\n    if (expYear) {\n      fields.expYear = expYear;\n      excludeElements.push(inverseAutocompleteSelectors.expYear);\n    }\n\n    if (expiry) {\n      fields.expiry = expiry;\n      excludeElements.push(\n        inverseAutocompleteSelectors.expiry,\n        inverseAutocompleteSelectors.expMonth,\n        inverseAutocompleteSelectors.expYear\n      );\n    }\n\n    if (firstName) {\n      fields.firstName = firstName;\n      excludeElements.push(inverseAutocompleteSelectors.firstName);\n    }\n\n    if (lastName) {\n      fields.lastName = lastName;\n      excludeElements.push(inverseAutocompleteSelectors.lastName);\n    }\n\n    if (firstName && lastName) {\n      excludeElements.push(inverseAutocompleteSelectors.name);\n    }\n\n    if (name) {\n      fields.name = name;\n      excludeElements.push(\n        inverseAutocompleteSelectors.name,\n        inverseAutocompleteSelectors.firstName,\n        inverseAutocompleteSelectors.lastName\n      );\n    }\n\n    if (addressLine1) {\n      fields.addressLine1 = addressLine1;\n      excludeElements.push(inverseAutocompleteSelectors.addressLine1);\n    }\n\n    if (addressLine2) {\n      fields.addressLine2 = addressLine2;\n      excludeElements.push(inverseAutocompleteSelectors.addressLine2);\n    }\n\n    if (addressLevel2) {\n      fields.addressLevel2 = addressLevel2;\n      excludeElements.push(inverseAutocompleteSelectors.addressLevel2);\n    }\n\n    if (addressLevel1) {\n      fields.addressLevel1 = addressLevel1;\n      excludeElements.push(inverseAutocompleteSelectors.addressLevel1);\n    }\n\n    if (streetAddress) {\n      fields.streetAddress = streetAddress;\n      excludeElements.push(inverseAutocompleteSelectors.streetAddress);\n    }\n\n    if (postalCode) {\n      fields.postalCode = postalCode;\n      excludeElements.push(inverseAutocompleteSelectors.postalCode);\n    }\n\n    // If we have all \"required\" fields between domain\n    // specific rules and standardized autocomplete checks\n    // then we can return early\n    if (matchedAllFields(fields)) {\n      return fields;\n    }\n\n    // Build up selectors that DO NOT include any of the\n    // elements we've already found (from the autocomplete checks)\n    const excludeSelector = excludeElements.join(\",\");\n    const fieldSelectors = genericSelectors\n      .map(\n        (selector) =>\n          selector + (excludeSelector.length ? `:not(${excludeSelector})` : \"\")\n      )\n      .join(\",\");\n\n    const inputs = (findElements(fieldSelectors) as HTMLInputElement[]) || [];\n    const radios =\n      (findElements(\n        \"input[type='radio']:not([disabled],[readonly])\"\n      ) as HTMLInputElement[]) || [];\n    const selects =\n      (findElements(\n        \"select:not([disabled],[readonly])\"\n      ) as HTMLSelectElement[]) || [];\n\n    let results = {};\n\n    if (inputs.length || selects.length) {\n      results = await processFields(inputs, radios, selects, fields);\n    }\n\n    // The deepscan is going to be the least reliable source of\n    // truth so we want the domain specific rules and standardized\n    // autocomplete checks to take precedence\n    return {\n      ...results,\n      ...fields,\n    };\n  }\n}\n","export interface Matches {\n  cvv?: Element[];\n  expiry?: Element[];\n  expMonth?: Element[];\n  expYear?: Element[];\n  firstName?: Element[];\n  lastName?: Element[];\n  name?: Element[];\n  pan?: Element[];\n  type?: Element[];\n\n  // Address fields\n  addressLevel2?: Element[]; // city\n  addressLevel1?: Element[]; // state\n  addressLine1?: Element[];\n  addressLine2?: Element[];\n  streetAddress?: Element[];\n  postalCode?: Element[];\n}\n\nexport enum FillDescription {\n  NO_FIELD = \"Could not find field to fill\",\n  NO_INPUT_FORMAT = \"Could not determine input format\",\n  NO_OPTION = \"Could not find any matching option\",\n  NO_OPTION_VALUE = \"Could not find matching option value\",\n}\nexport interface FillResult {\n  filled: boolean;\n  field: keyof Matches;\n  description?: FillDescription;\n}\n\nexport type FillResults = Partial<Record<keyof Matches, FillResult>>;\n","import type { ExtensionContext } from \"./types\";\n\n// Note: additional management methods might require adding manifest permissions\n// https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/management\n\nexport default class Management {\n  private context?: ExtensionContext;\n\n  constructor(context?: ExtensionContext) {\n    this.context = context;\n  }\n\n  uninstall() {\n    const options: chrome.management.UninstallOptions = {\n      showConfirmDialog: true,\n    };\n\n    return this.context?.management.uninstallSelf(options);\n  }\n}\n","import type { ExtensionContext, MessageBody, SendMessageBody } from \"./types\";\n\nexport default class Message {\n  private context?: ExtensionContext;\n  private namespace: string;\n\n  constructor(namepsace: string, context?: ExtensionContext) {\n    this.namespace = namepsace;\n    this.context = context;\n  }\n\n  async send(message: SendMessageBody): Promise<any> {\n    const data = {\n      ...message,\n      from: this.namespace,\n    } as MessageBody;\n\n    return await this.context?.runtime?.sendMessage(data);\n  }\n\n  addListener(\n    callback: (\n      message: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => void\n  ) {\n    this.context?.runtime?.onMessage?.addListener(callback);\n  }\n}\n","// These keys should never change\nexport const UPDATE_KEY = \"updatesViewed\";\nexport const CONSENT_KEY = \"dataConsentAgreed\";\nexport const ACTIVITY_CONSENT_KEY = \"activityConsentAgreed\";\n","import type { ExtensionContext } from \"./types\";\nimport { UPDATE_KEY, CONSENT_KEY } from \"@/lib/updates/types\";\n\nexport default class Storage {\n  private context?: ExtensionContext;\n\n  constructor(context?: ExtensionContext) {\n    this.context = context;\n  }\n\n  async set(items: Record<string, any>): Promise<void> {\n    for (const key in items) {\n      items[key] = JSON.stringify(items[key]);\n    }\n\n    if (this.context?.storage) {\n      await this.context.storage.local.set(items);\n      return;\n    }\n\n    for (const key in items) {\n      localStorage.setItem(key, items[key]);\n    }\n  }\n\n  async get(\n    keys?: string | string[] | Record<string, any> | null\n  ): Promise<Record<string, any>> {\n    let items: Record<string, any> = {};\n    const includesDefaults = !!(\n      keys &&\n      typeof keys !== \"string\" &&\n      !Array.isArray(keys)\n    );\n\n    if (this.context?.storage) {\n      items = await this.context.storage.local.get(keys);\n\n      for (const key in items) {\n        if (typeof items[key] === \"string\") {\n          items[key] = JSON.parse(items[key]);\n        }\n      }\n\n      return items;\n    }\n\n    let iterableKeys = keys;\n\n    if (typeof keys === \"string\") {\n      iterableKeys = [keys];\n    } else if (keys && !Array.isArray(keys)) {\n      iterableKeys = Object.keys(keys);\n    }\n\n    if (!iterableKeys) {\n      items = { ...localStorage };\n    } else {\n      (iterableKeys as string[]).forEach((key) => {\n        items[key] = localStorage.getItem(key);\n\n        if (includesDefaults && !items[key]) {\n          items[key] = keys[key];\n        }\n      });\n    }\n\n    for (const key in items) {\n      if (typeof items[key] === \"string\") {\n        items[key] = JSON.parse(items[key]);\n      }\n    }\n\n    return items;\n  }\n\n  async remove(keys: string | string[]): Promise<void> {\n    if (this.context?.storage) {\n      await this.context.storage.local.remove(keys);\n      return;\n    }\n\n    const iterableKeys = Array.isArray(keys) ? keys : [keys];\n    iterableKeys.forEach((key) => localStorage.removeItem(key));\n  }\n\n  async clear({ keepDeviceId = false } = {}): Promise<void> {\n    // set during remember device TFA step\n    // and should not be cleared from a 401 but should\n    // be cleared when the user logs out\n    const { deviceId } = await this.get(\"deviceId\");\n\n    // Retain this so we don't show the product update screen again after logout\n    const updates = await this.get(UPDATE_KEY);\n\n    // Retain this so we don't show the data consent screen again after logout\n    const dataConsent = await this.get(CONSENT_KEY);\n\n    if (this.context?.storage) {\n      await this.context.storage.local.clear();\n    } else {\n      localStorage.clear();\n    }\n\n    if (deviceId && keepDeviceId) {\n      await this.set({ deviceId });\n    }\n\n    if (updates[UPDATE_KEY]) {\n      await this.set(updates);\n    }\n\n    if (dataConsent[CONSENT_KEY]) {\n      await this.set(dataConsent);\n    }\n  }\n}\n","import Management from \"./management\";\nimport Message from \"./message\";\nimport Storage from \"./storage\";\nimport type { ExtensionContext, ExtensionEvents, Manifest } from \"./types\";\n\nexport default class ExtensionApi {\n  private _context?: ExtensionContext;\n  storage: Storage;\n  message: Message;\n  management: Management;\n\n  constructor(namespace: string) {\n    // @ts-ignore\n    if (typeof browser !== \"undefined\") {\n      // @ts-ignore\n      this._context = browser;\n    } else if (typeof chrome !== \"undefined\") {\n      this._context = chrome;\n    }\n\n    if (this._context) {\n      this._context.runtime?.connect();\n    }\n\n    this.storage = new Storage(this._context);\n    this.message = new Message(namespace, this._context);\n    this.management = new Management(this._context);\n  }\n\n  get context(): ExtensionContext | undefined {\n    return this._context;\n  }\n\n  get popup(): boolean {\n    if (this.context?.extension?.getViews) {\n      return !!this.context?.extension?.getViews({ type: \"popup\" })?.length;\n    }\n\n    return false;\n  }\n\n  getManifest(): Manifest {\n    if (!this.context) {\n      return {} as Manifest;\n    }\n\n    return this.context.runtime.getManifest();\n  }\n\n  getURL(url: string) {\n    if (!this.context) {\n      return \"\";\n    }\n\n    return this.context.runtime?.getURL(url);\n  }\n\n  async getBrowserInfo() {\n    // Firefox only for now, which works well for our purposes\n    // @ts-ignore\n    if (this.context?.runtime?.getBrowserInfo) {\n      // @ts-ignore\n      return this.context.runtime.getBrowserInfo();\n    }\n\n    return {\n      name: \"\",\n      vendor: \"\",\n      version: \"\",\n      buildID: \"\",\n    };\n  }\n\n  addListener(event: ExtensionEvents, callback: any) {\n    if (!this.context) {\n      return;\n    }\n\n    this.context.runtime[event].addListener(callback);\n  }\n\n  addBrowserActionListener(callback: any) {\n    if (!this.context) {\n      return;\n    }\n\n    this.context.action.onClicked.addListener(callback);\n  }\n\n  async getCurrentTab(): Promise<chrome.tabs.Tab | undefined> {\n    if (!this.context || !this.context.tabs) {\n      return;\n    }\n\n    const [tab] = await this.context.tabs.query({\n      active: true,\n      currentWindow: true,\n    });\n\n    return tab;\n  }\n\n  addTabListener(listener: any) {\n    this.context?.tabs?.onUpdated.addListener(listener);\n  }\n}\n","export default \"<svg viewBox=\\\"0 0 40 40\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <path\\n    d=\\\"M29.4 1H10.6C7.23969 1 5.55953 1 4.27606 1.65396C3.14708 2.2292 2.2292 3.14708 1.65396 4.27606C1 5.55953 1 7.23969 1 10.6V29.4C1 32.7603 1 34.4405 1.65396 35.7239C2.2292 36.8529 3.14708 37.7708 4.27606 38.346C5.55953 39 7.23969 39 10.6 39H29.4C32.7603 39 34.4405 39 35.7239 38.346C36.8529 37.7708 37.7708 36.8529 38.346 35.7239C39 34.4405 39 32.7603 39 29.4V10.6C39 7.23969 39 5.55953 38.346 4.27606C37.7708 3.14708 36.8529 2.2292 35.7239 1.65396C34.4405 1 32.7603 1 29.4 1Z\\\"\\n    fill=\\\"#232320\\\" />\\n  <path\\n    d=\\\"m19.56 10.001h-7.5603v20.046h4.2956v-6.5866h3.2647c5.7656 0 8.6484-2.2433 8.6484-6.7298s-2.8828-6.7298-8.6484-6.7298zm0.2004 3.7801c2.711 0 4.0665 0.9833 4.0665 2.9497s-1.3555 2.9496-4.0665 2.9496h-3.4651v-5.8993h3.4651z\\\"\\n    clip-rule=\\\"evenodd\\\" fill=\\\"#fff\\\" fill-rule=\\\"evenodd\\\" />\\n</svg>\\n\"","export function debounce(func: any, timeout = 500) {\n  let timer: string | number | NodeJS.Timeout | undefined;\n\n  return (...args: any) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(() => {\n      // @ts-ignore\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\nexport function isIPhone() {\n  return navigator.userAgent.includes(\"iPhone\");\n}\n\nexport function isIPad() {\n  // iPad is only exposed via user agent pre iOS 13,\n  // so check for touch event handlers\n  return (\n    navigator.userAgent.includes(\"iPad\") ||\n    (navigator.userAgent.includes(\"Mac\") && \"ontouchend\" in document)\n  );\n}\n\nexport function isIOS() {\n  return isIPhone() || isIPad();\n}\n\nexport function isFirefox() {\n  return (\n    navigator.userAgent.includes(\"Firefox\") &&\n    navigator.userAgent.includes(\"rv:\")\n  );\n}\n","import logo from \"@/assets/icons/privacy.svg?raw\";\nimport { isIOS } from \"../utils/utils\";\n\nconst wrapperStyles = {\n  all: \"initial\",\n  height: \"24px\",\n  left: \"0px\",\n  \"max-height\": \"36px\",\n  \"max-width\": \"36px\",\n  \"min-height\": \"12px\",\n  \"min-width\": \"12px\",\n  position: \"fixed\",\n  top: \"0px\",\n  width: \"24px\",\n  \"z-index\": \"2147483647\",\n};\n\nconst wrapperStylesMobile = {\n  height: \"44px\",\n  \"max-height\": \"44px\",\n  \"max-width\": \"44px\",\n  top: \"unset\",\n  width: \"44px\",\n};\n\nconst tooltipStyles = {\n  all: \"initial\",\n  background: \"#000\",\n  \"border-radius\": \"5px\",\n  bottom: \"calc(100% + 5px)\",\n  \"box-shadow\": \"0 0 0 1px rgba(0, 0, 0, 0.08), 0 4px 12px rgba(0, 0, 0, 0.1)\",\n  color: \"#fff\",\n  \"font-family\": \"Helvetica, Arial, sans-serif\",\n  \"font-size\": \"11px\",\n  left: \"-99999999px\",\n  padding: \"5px\",\n  position: \"absolute\",\n  \"text-align\": \"center\",\n  transform: \"translateX(-50%)\",\n  width: \"100px\",\n  opacity: 0,\n  transition: \"opacity 250ms ease-in-out 300ms\",\n};\n\nconst tooltipStylesMobile = {\n  bottom: \"5px\",\n  transform: \"translate(0)\",\n};\n\nconst arrowStyles = {\n  all: \"initial\",\n  border: \"5px solid transparent\",\n  \"border-top-color\": \"#000\",\n  content: '\"\"',\n  left: \"50%\",\n  position: \"absolute\",\n  top: \"100%\",\n  transform: \"translateX(-50%)\",\n};\n\nconst arrowStylesMobile = {\n  bottom: \"unset\",\n  left: \"-10px\",\n  transform: \"translateY(-50%)\",\n  top: \"50%\",\n  \"border-top-color\": \"transparent\",\n  \"border-right-color\": \"#000\",\n};\n\nconst buttonStyles = {\n  all: \"initial\",\n  border: \"none\",\n  cursor: \"pointer\",\n  display: \"block\",\n  height: \"100%\",\n  width: \"100%\",\n};\n\nconst iconStyles = {\n  display: \"block\",\n  width: \"100%\",\n  height: \"100%\",\n};\n\nfunction getStyleStr(styles: any) {\n  return Object.entries(styles)\n    .map(([key, value]) => `${key}:${value}`)\n    .join(\";\");\n}\n\nconst wrapperId = \"pwp-button\";\nexport const buttonSelector = \"#\" + wrapperId;\n\nconst generateStyles = () => {\n  const wrapper = {\n    ...wrapperStyles,\n    ...(isIOS() ? wrapperStylesMobile : {}),\n  };\n\n  const tooltip = {\n    ...tooltipStyles,\n    ...(isIOS() ? tooltipStylesMobile : {}),\n  };\n\n  const arrow = {\n    ...arrowStyles,\n    ...(isIOS() ? arrowStylesMobile : {}),\n  };\n\n  return `\n    ${buttonSelector} { ${getStyleStr(wrapper)} }\n    #pwp-tooltip { ${getStyleStr(tooltip)} }\n    #pwp-control { ${getStyleStr(buttonStyles)} }\n    #pwp-control svg { ${getStyleStr(iconStyles)} }\n    #pwp-tooltip::after { ${getStyleStr(arrow)} }\n    ${buttonSelector}:hover #pwp-tooltip { left: 110%; opacity: 1; }\n  `;\n};\n\nexport default function createButton() {\n  const style = document.createElement(\"style\");\n  style.textContent = generateStyles();\n\n  const wrapper = document.createElement(\"div\");\n  wrapper.setAttribute(\"id\", wrapperId);\n\n  const tooltip = document.createElement(\"div\");\n  tooltip.setAttribute(\"id\", \"pwp-tooltip\");\n  tooltip.setAttribute(\"role\", \"tooltip\");\n  tooltip.setAttribute(\"aria-hidden\", \"true\");\n  tooltip.textContent = \"Autofill Privacy Card\";\n\n  const button = document.createElement(\"button\");\n  button.setAttribute(\"id\", \"pwp-control\");\n  button.setAttribute(\"aria-label\", \"Autofill Privacy Card\");\n  button.insertAdjacentHTML(\"beforeend\", logo.trim());\n\n  wrapper.appendChild(style);\n  wrapper.appendChild(tooltip);\n  wrapper.appendChild(button);\n\n  return wrapper;\n}\n","import { isIPhone } from \"../utils/utils\";\n\nconst wrapperId = \"pwp-interstitial\";\nconst frameId = wrapperId + \"-frame\";\n\nexport const interstitialSelector = \"#\" + wrapperId;\nexport const frameSelector = \"#\" + frameId;\n\nconst wrapperStyles = {\n  all: \"initial\",\n  position: \"fixed\",\n  \"z-index\": 2147483647,\n};\n\nconst wrapperStylesMobile = {\n  width: \"100vw\",\n  top: \"0px\",\n  left: \"0px\",\n};\n\nconst wrapperStylesBackground = {\n  height: \"100vh\",\n  \"background-color\": \"rgba(184, 184, 204, 0.5)\",\n};\n\nconst frameStyles = {\n  all: \"initial\",\n  \"box-sizing\": \"content-box\",\n  position: \"fixed\",\n  \"z-index\": \"2147483647\",\n  height: \"500px\",\n  width: \"366px\",\n  top: \"10px\",\n  right: \"10px\",\n  border: \"1px solid rgba(0, 0, 0, 0.08)\",\n  \"border-radius\": \"8px\",\n  \"box-shadow\": \"0 5px 40px rgba(40, 51, 75, 0.1)\",\n  transition: \"height 0.3s ease-in-out\",\n};\n\nconst frameStylesMobile = {\n  left: \"10px\",\n  width: \"calc(100% - 20px)\",\n};\n\nconst styles = {\n  [interstitialSelector]: {\n    ...wrapperStyles,\n    ...(isIPhone() ? wrapperStylesMobile : {}),\n  },\n  [frameSelector]: {\n    ...frameStyles,\n    ...(isIPhone() ? frameStylesMobile : {}),\n  },\n};\n\nfunction getStyleStr(styleObj: Record<string, any>) {\n  return Object.entries(styleObj)\n    .map(([key, value]) => `${key}: ${value}`)\n    .join(\";\");\n}\n\nconst defaultStyles = `\n  ${interstitialSelector} { ${getStyleStr(styles[interstitialSelector])} }\n  ${frameSelector} { ${getStyleStr(styles[frameSelector])} }\n`;\n\nconst backgroundStyles = `\n  ${interstitialSelector} { ${getStyleStr(wrapperStylesBackground)} };\n`;\n\n// Allow the background styles to bet set dynamically, since they are\n// visible on some mobile screens, but not all\nexport function setStyles(wrapper: HTMLElement, includeBg = true) {\n  let style = wrapper.querySelector(\"style\");\n\n  if (!style) {\n    style = document.createElement(\"style\");\n    wrapper.appendChild(style);\n  }\n\n  let text = defaultStyles;\n\n  if (includeBg) {\n    text += backgroundStyles;\n  }\n\n  style.textContent = text;\n}\n\nexport default function createInterstitial(src: string) {\n  const wrapper = document.createElement(\"div\");\n  wrapper.setAttribute(\"id\", wrapperId);\n\n  const frame = document.createElement(\"iframe\");\n  frame.setAttribute(\"id\", frameId);\n  frame.setAttribute(\"src\", src);\n  frame.setAttribute(\"allow\", \"clipboard-write\");\n\n  setStyles(wrapper);\n  wrapper.appendChild(frame);\n\n  return wrapper;\n}\n","import type { Card } from \"@/types/Card\";\nimport type { Matches } from \"../checkout.types\";\n\n// Return regex for the card type based on the PAN\n// For our purposes we only card about Visa and Mastercard\n\n// Major industry indentifier (mii)\n// 1, 2 : Airlines\n// 3    : travel & entertainment (e.g. Amex, JCB, Diners Club)\n// 4    : Visa\n// 5    : Mastercard\n// 6    : Discover\n// 7    : Petroleum (aka Fleet card)\n// 8    : telecom\n// 9    : National assignment\n\nexport function getCardTypeRegex(pan: Card[\"PAN\"]): RegExp {\n  const mii = pan[0];\n\n  if (mii === \"4\") {\n    return /visa/i;\n  } else if (mii === \"5\") {\n    return /master ?card/i;\n  } else {\n    throw new Error(\"Unsupported card type\");\n  }\n}\n\nexport function getCardTypeString(pan: Card[\"PAN\"], ucWord = false) {\n  const mii = pan[0];\n  let ret = \"\";\n\n  if (mii === \"4\") {\n    ret = \"visa\";\n  } else if (mii === \"5\") {\n    ret = \"mastercard\";\n  } else {\n    throw new Error(\"Unsupported card type\");\n  }\n\n  if (ucWord) {\n    ret = ret.slice(0, 1).toUpperCase() + ret.slice(1);\n  }\n\n  return ret;\n}\n\nexport function getLabel(ele: HTMLInputElement | HTMLSelectElement) {\n  return trimString(ele.labels?.[0]?.textContent || \"\");\n}\n\nexport function trimString(target = \"\") {\n  return target.trim().replace(/\\s\\s+/g, \" \");\n}\n\nexport function isFourInputPAN(elements: Matches[\"pan\"] = []) {\n  if (elements.length >= 4) {\n    const widthCount = {} as Record<string, number>,\n      topCount = {} as Record<string, number>;\n\n    let filteredCandidates = elements.filter(function (candidate) {\n      // Keep track of widths and tops so we can use them in the next step\n      // to make sure we have 4 uniform text inputs along the same line level\n      return (\n        candidate.getAttribute(\"maxlength\") === \"4\" ||\n        candidate.getAttribute(\"size\") === \"4\"\n      );\n    });\n\n    filteredCandidates.forEach((candidate) => {\n      const { top, width } = candidate.getBoundingClientRect();\n      widthCount[width] = (widthCount[width] || 0) + 1;\n      topCount[top] = (topCount[top] || 0) + 1;\n    });\n\n    const filteredCandidatesLength = filteredCandidates.length;\n\n    if (filteredCandidatesLength >= 4) {\n      // Now make sure there are at least 4 are in-line horizontally\n      filteredCandidates = filteredCandidates.filter((candidate) => {\n        // *XXX: This is a slow call, but this shouldnt happen very often\n        //       and this array is unlikely to have that many elements\n        const clientRect = candidate.getBoundingClientRect();\n\n        // Look for uniform top and width thats common among a majority\n        // Using || instead of && because a 4 input site (cyberpowerpc.com)\n        // has wider outside inputs than inside ones.\n        if (\n          widthCount[clientRect.width] * 2 > filteredCandidatesLength ||\n          topCount[clientRect.top] * 2 > filteredCandidatesLength\n        ) {\n          return true;\n        }\n      });\n\n      // We need exactly 4, otherwise we cant reliably figure out\n      // how to populate the 4 parts of the card number\n      if (filteredCandidates.length == 4) {\n        // Sort these in order from right to left\n        filteredCandidates.sort(function (lhs, rhs) {\n          return (\n            lhs.getBoundingClientRect().left - rhs.getBoundingClientRect().left\n          );\n        });\n\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nconst states = [\n  {\n    name: \"Alabama\",\n    abbreviation: \"AL\",\n  },\n  {\n    name: \"Alaska\",\n    abbreviation: \"AK\",\n  },\n  {\n    name: \"American Samoa\",\n    abbreviation: \"AS\",\n  },\n  {\n    name: \"Arizona\",\n    abbreviation: \"AZ\",\n  },\n  {\n    name: \"Arkansas\",\n    abbreviation: \"AR\",\n  },\n  {\n    name: \"California\",\n    abbreviation: \"CA\",\n  },\n  {\n    name: \"Colorado\",\n    abbreviation: \"CO\",\n  },\n  {\n    name: \"Connecticut\",\n    abbreviation: \"CT\",\n  },\n  {\n    name: \"Delaware\",\n    abbreviation: \"DE\",\n  },\n  {\n    name: \"District Of Columbia\",\n    abbreviation: \"DC\",\n  },\n  {\n    name: \"Federated States Of Micronesia\",\n    abbreviation: \"FM\",\n  },\n  {\n    name: \"Florida\",\n    abbreviation: \"FL\",\n  },\n  {\n    name: \"Georgia\",\n    abbreviation: \"GA\",\n  },\n  {\n    name: \"Guam\",\n    abbreviation: \"GU\",\n  },\n  {\n    name: \"Hawaii\",\n    abbreviation: \"HI\",\n  },\n  {\n    name: \"Idaho\",\n    abbreviation: \"ID\",\n  },\n  {\n    name: \"Illinois\",\n    abbreviation: \"IL\",\n  },\n  {\n    name: \"Indiana\",\n    abbreviation: \"IN\",\n  },\n  {\n    name: \"Iowa\",\n    abbreviation: \"IA\",\n  },\n  {\n    name: \"Kansas\",\n    abbreviation: \"KS\",\n  },\n  {\n    name: \"Kentucky\",\n    abbreviation: \"KY\",\n  },\n  {\n    name: \"Louisiana\",\n    abbreviation: \"LA\",\n  },\n  {\n    name: \"Maine\",\n    abbreviation: \"ME\",\n  },\n  {\n    name: \"Marshall Islands\",\n    abbreviation: \"MH\",\n  },\n  {\n    name: \"Maryland\",\n    abbreviation: \"MD\",\n  },\n  {\n    name: \"Massachusetts\",\n    abbreviation: \"MA\",\n  },\n  {\n    name: \"Michigan\",\n    abbreviation: \"MI\",\n  },\n  {\n    name: \"Minnesota\",\n    abbreviation: \"MN\",\n  },\n  {\n    name: \"Mississippi\",\n    abbreviation: \"MS\",\n  },\n  {\n    name: \"Missouri\",\n    abbreviation: \"MO\",\n  },\n  {\n    name: \"Montana\",\n    abbreviation: \"MT\",\n  },\n  {\n    name: \"Nebraska\",\n    abbreviation: \"NE\",\n  },\n  {\n    name: \"Nevada\",\n    abbreviation: \"NV\",\n  },\n  {\n    name: \"New Hampshire\",\n    abbreviation: \"NH\",\n  },\n  {\n    name: \"New Jersey\",\n    abbreviation: \"NJ\",\n  },\n  {\n    name: \"New Mexico\",\n    abbreviation: \"NM\",\n  },\n  {\n    name: \"New York\",\n    abbreviation: \"NY\",\n  },\n  {\n    name: \"North Carolina\",\n    abbreviation: \"NC\",\n  },\n  {\n    name: \"North Dakota\",\n    abbreviation: \"ND\",\n  },\n  {\n    name: \"Northern Mariana Islands\",\n    abbreviation: \"MP\",\n  },\n  {\n    name: \"Ohio\",\n    abbreviation: \"OH\",\n  },\n  {\n    name: \"Oklahoma\",\n    abbreviation: \"OK\",\n  },\n  {\n    name: \"Oregon\",\n    abbreviation: \"OR\",\n  },\n  {\n    name: \"Palau\",\n    abbreviation: \"PW\",\n  },\n  {\n    name: \"Pennsylvania\",\n    abbreviation: \"PA\",\n  },\n  {\n    name: \"Puerto Rico\",\n    abbreviation: \"PR\",\n  },\n  {\n    name: \"Rhode Island\",\n    abbreviation: \"RI\",\n  },\n  {\n    name: \"South Carolina\",\n    abbreviation: \"SC\",\n  },\n  {\n    name: \"South Dakota\",\n    abbreviation: \"SD\",\n  },\n  {\n    name: \"Tennessee\",\n    abbreviation: \"TN\",\n  },\n  {\n    name: \"Texas\",\n    abbreviation: \"TX\",\n  },\n  {\n    name: \"Utah\",\n    abbreviation: \"UT\",\n  },\n  {\n    name: \"Vermont\",\n    abbreviation: \"VT\",\n  },\n  {\n    name: \"Virgin Islands\",\n    abbreviation: \"VI\",\n  },\n  {\n    name: \"Virginia\",\n    abbreviation: \"VA\",\n  },\n  {\n    name: \"Washington\",\n    abbreviation: \"WA\",\n  },\n  {\n    name: \"West Virginia\",\n    abbreviation: \"WV\",\n  },\n  {\n    name: \"Wisconsin\",\n    abbreviation: \"WI\",\n  },\n  {\n    name: \"Wyoming\",\n    abbreviation: \"WY\",\n  },\n];\n\nexport const stateAbbreviations = states.reduce((acc, state) => {\n  acc[state.abbreviation] = state.name;\n  return acc;\n}, {} as Record<string, string>);\n","import type { Card } from \"@/types/Card\";\nimport {\n  FillDescription,\n  type FillResult,\n  type FillResults,\n  type Matches,\n} from \"../checkout.types\";\nimport {\n  getLabel,\n  getCardTypeRegex,\n  isFourInputPAN,\n  stateAbbreviations,\n} from \"./filler.utils\";\n\nconst monthAbbreviations: Record<number, string> = {\n  1: \"jan\",\n  2: \"feb\",\n  3: \"mar\",\n  4: \"apr\",\n  5: \"may\",\n  6: \"jun\",\n  7: \"jul\",\n  8: \"aug\",\n  9: \"sept\",\n  10: \"oct\",\n  11: \"nov\",\n  12: \"dec\",\n};\n\n// Matches on MM/YY or MM/YYYY, with or without slash and whitespace\nconst expiryRegExp = /(?<month>mm)(?<separator>\\s*\\/?\\s*)(?<year>(?:yy){1,2})/i;\nexport default class CheckoutFiller {\n  private data: Record<string, any> = {};\n  private matches: Matches;\n\n  constructor(matches: Matches, cardData: Record<string, any>) {\n    this.matches = matches;\n    this.data = cardData;\n  }\n\n  fillAllFields() {\n    const results: FillResults = {};\n\n    results.type = this.fillCardType(this.data.pan, window.document);\n    results.pan = this.fillPan(this.matches.pan, this.data.pan);\n    results.cvv = this.fillCvv(this.matches.cvv, this.data.cvv);\n\n    if (this.matches.expMonth) {\n      results.expMonth = this.fillExpMonth({\n        expMonthFields: this.matches.expMonth,\n        expMonth: this.data.expMonth,\n      });\n    }\n\n    if (this.matches.expYear) {\n      results.expYear = this.fillExpYear({\n        expYear: this.data.expYear,\n        expYearFields: this.matches.expYear,\n      });\n    }\n\n    if (this.matches.expiry) {\n      results.expiry = this.fillExpiry(this.matches.expiry, {\n        expMonth: this.data.expMonth,\n        expYear: this.data.expYear,\n      });\n    }\n\n    if (this.matches.streetAddress) {\n      this.populateInput(\n        this.matches.streetAddress as HTMLInputElement[],\n        this.data.streetAddress\n      );\n      results.streetAddress = { filled: true } as FillResult;\n    }\n\n    if (this.matches.addressLine1) {\n      this.populateInput(\n        this.matches.addressLine1 as HTMLInputElement[],\n        this.data.addressLine1\n      );\n      results.addressLine1 = { filled: true } as FillResult;\n    }\n\n    if (this.matches.addressLine2) {\n      this.populateInput(\n        this.matches.addressLine2 as HTMLInputElement[],\n        this.data.addressLine2\n      );\n      results.addressLine2 = { filled: true } as FillResult;\n    }\n\n    if (this.matches.addressLevel2) {\n      this.populateInput(\n        this.matches.addressLevel2 as HTMLInputElement[],\n        this.data.addressLevel2\n      );\n      results.addressLevel2 = { filled: true } as FillResult;\n    }\n\n    if (this.matches.addressLevel1) {\n      this.fillAddressLevel1(\n        this.matches.addressLevel1,\n        this.data.addressLevel1\n      );\n      results.addressLevel2 = { filled: true } as FillResult;\n    }\n\n    if (this.matches.postalCode) {\n      this.populateInput(\n        this.matches.postalCode as HTMLInputElement[],\n        this.data.postalCode\n      );\n      results.postalCode = { filled: true } as FillResult;\n    }\n\n    if (this.matches.name) {\n      this.populateInput(\n        this.matches.name as HTMLInputElement[],\n        this.data.name\n      );\n      results.name = { filled: true } as FillResult;\n    }\n\n    if (this.matches.firstName) {\n      this.populateInput(\n        this.matches.firstName as HTMLInputElement[],\n        this.data.firstName\n      );\n      results.firstName = { filled: true } as FillResult;\n    }\n\n    if (this.matches.lastName) {\n      this.populateInput(\n        this.matches.lastName as HTMLInputElement[],\n        this.data.lastName\n      );\n      results.lastName = { filled: true } as FillResult;\n    }\n\n    return results;\n  }\n\n  // Some forms make the user choose VISA/Mastercard from a dropdown or radio\n  // buttons, even though this can be determined from the PAN\n  private fillCardType(pan: Card[\"PAN\"], doc = window.document): FillResult {\n    const cardRE = getCardTypeRegex(pan);\n    const selects = Array.from(\n      doc.querySelectorAll(\"select:not([disabled],[readonly])\")\n    ) as HTMLSelectElement[];\n\n    const options = selects.map(({ options }) => Array.from(options)).flat();\n    const result = { filled: false } as FillResult;\n\n    const option = options\n      .filter((el) => {\n        return el.text.match(cardRE) || el.value.match(cardRE);\n      })\n      .sort((a, b) => {\n        // A perfect match will mean a.text is \"visa\" or \"mastercard\",\n        // so sort any longer strings lower down the list\n        return a.text.toLowerCase().length > b.text.toLowerCase().length\n          ? 1\n          : -1;\n      })\n      .shift(); // Pick the first\n\n    if (option) {\n      const select = option.closest(\"select\") as HTMLSelectElement;\n      this.populateSelect(select, option.value);\n\n      result.filled = true;\n      return result;\n    }\n\n    // Do the same thing for radio buttons with a label\n    const radios = Array.from(\n      doc.querySelectorAll('input[type=\"radio\"]:not([disabled],[readonly])')\n    ) as HTMLInputElement[];\n\n    const radio = radios\n      .filter((el: HTMLInputElement) => {\n        const label = getLabel(el);\n\n        // Make sure we dont check \"Visa checkout\" which is an alternate (Paypal esque) checkout process\n        return (\n          label.match(/visa|mastercard/i) &&\n          !label.match(/visa\\s*checkout/i) &&\n          !label.match(/master\\s*card/i)\n        );\n      })\n      .sort((a, b) => {\n        return getLabel(a).toLowerCase().length >\n          getLabel(b).toLowerCase().length\n          ? 1\n          : -1;\n      })\n      .shift(); // Pick the first\n\n    if (radio) {\n      this.triggerClick(radio);\n      result.filled = true;\n      return result;\n    }\n\n    result.description = FillDescription.NO_FIELD;\n    return result;\n  }\n\n  private fillPan(elements: Matches[\"pan\"], value: string): FillResult {\n    const result = { filled: false } as FillResult;\n\n    if (!elements) {\n      result.description = FillDescription.NO_FIELD;\n      return result;\n    }\n\n    // Some forms split the PAN into 4 groups of 4 digits - check for this\n    const fourInputPAN = isFourInputPAN(elements);\n\n    if (fourInputPAN) {\n      const panSplits = value.match(/\\d{4}/g) || [];\n      panSplits.forEach((fourDigitGroup, idx) => {\n        this.populateInput(elements[idx] as HTMLInputElement, fourDigitGroup);\n      });\n    } else {\n      this.populateInput(elements as HTMLInputElement[], value);\n    }\n\n    result.filled = true;\n    return result;\n  }\n\n  private fillCvv(elements: Matches[\"cvv\"], value: string): FillResult {\n    const result = { filled: false } as FillResult;\n\n    if (!elements) {\n      result.description = FillDescription.NO_FIELD;\n      return result;\n    }\n\n    this.populateInput(elements as HTMLInputElement[], value);\n\n    result.filled = true;\n    return result;\n  }\n\n  // Set the expiration month input value\n  // The month will either be a SELECT dropdown or a text INPUT\n  private fillExpMonth({\n    expMonthFields,\n    expMonth,\n  }: {\n    expMonthFields: Matches[\"expMonth\"];\n    expMonth: string;\n  }): FillResult {\n    const result = { filled: false } as FillResult;\n\n    if (!expMonthFields?.length || !expMonth) {\n      result.description = FillDescription.NO_FIELD;\n      return result;\n    }\n\n    const monthNum = parseInt(expMonth, 10);\n    const monthAbbrev = monthAbbreviations[monthNum];\n    const formatRegex = /mm/i;\n\n    expMonthFields.forEach((candidate) => {\n      if (candidate instanceof HTMLSelectElement) {\n        let selector = \"option[value^='\" + monthAbbrev + \"' i],\";\n        const zeroBased =\n          candidate.querySelector<HTMLOptionElement>(\"option[value='0']\") &&\n          !candidate.querySelector<HTMLOptionElement>(\"option[value='12']\");\n\n        if (zeroBased) {\n          const zeroMonth = monthNum - 1;\n\n          selector += `option[value='${zeroMonth}'],option[value='${zeroMonth\n            .toString(10)\n            .padStart(2, \"0\")}']`;\n        } else {\n          selector += `option[value='${monthNum}'],option[value='${expMonth}']`;\n        }\n\n        let option: HTMLOptionElement | null | undefined =\n          candidate.querySelector<HTMLOptionElement>(selector);\n\n        if (!option) {\n          option = Array.from(candidate.options).find((opt) => {\n            const text = opt.text.trim().toLowerCase();\n\n            return (\n              text === monthNum.toString() ||\n              text === expMonth ||\n              text.includes(monthAbbrev)\n            );\n          });\n        }\n\n        if (option?.value?.length) {\n          this.populateSelect(candidate, option.value);\n\n          result.filled = true;\n        } else if (option) {\n          option.selected = true;\n\n          result.description = FillDescription.NO_OPTION_VALUE;\n          result.filled = true;\n        } else {\n          result.description = FillDescription.NO_OPTION;\n        }\n      } else if (candidate instanceof HTMLInputElement) {\n        const formatFound =\n          candidate.maxLength === 2 ||\n          formatRegex.test(candidate.placeholder) ||\n          formatRegex.test(candidate.alt) ||\n          formatRegex.test(candidate.title) ||\n          formatRegex.test(getLabel(candidate));\n\n        if (!formatFound) {\n          result.description = FillDescription.NO_INPUT_FORMAT;\n        }\n\n        this.populateInput(candidate, expMonth);\n        result.filled = true;\n      }\n    });\n\n    return result;\n  }\n\n  // Fill expiration month and year when they are separate fields\n  private fillExpYear({\n    expYearFields,\n    expYear,\n  }: {\n    expYearFields: Matches[\"expYear\"];\n    expYear: string;\n  }): FillResult {\n    const result = { filled: false } as FillResult;\n\n    if (!expYearFields?.length || !expYear) {\n      result.description = FillDescription.NO_FIELD;\n      return result;\n    }\n\n    const expYearShort = expYear.slice(-2);\n    const selector = `option[value$='${expYearShort}']`;\n    const formatRegex = /yy/i;\n\n    expYearFields.forEach((candidate) => {\n      if (candidate instanceof HTMLSelectElement) {\n        let option: HTMLOptionElement | null | undefined =\n          candidate.querySelector<HTMLOptionElement>(selector);\n\n        if (!option) {\n          option = Array.from(candidate.options).find((option) =>\n            option.text.trim().endsWith(expYearShort)\n          );\n        }\n\n        if (option?.value?.length) {\n          this.populateSelect(candidate, option.value);\n\n          result.filled = true;\n        } else if (option) {\n          option.selected = true;\n\n          result.description = FillDescription.NO_OPTION_VALUE;\n          result.filled = true;\n        } else {\n          result.description = FillDescription.NO_OPTION;\n        }\n      } else if (candidate instanceof HTMLInputElement) {\n        // This is simple case where expYear is just a text input that's looking for the digits\n        if (\n          formatRegex.test(candidate.placeholder) ||\n          formatRegex.test(candidate.alt) ||\n          formatRegex.test(candidate.title) ||\n          formatRegex.test(getLabel(candidate)) ||\n          candidate.maxLength === 2\n        ) {\n          this.populateInput(candidate, expYearShort);\n        } else {\n          // Fall back to using full year\n          this.populateInput(candidate, expYear);\n          result.description = FillDescription.NO_INPUT_FORMAT;\n        }\n\n        result.filled = true;\n      }\n    });\n\n    return result;\n  }\n\n  // Fill the expiration month + date when they are a single combined field\n  private fillExpiry(\n    elements: Matches[\"expiry\"],\n    { expMonth, expYear }: { expMonth: string; expYear: string }\n  ): FillResult {\n    const result = { filled: false } as FillResult;\n\n    if (!elements) {\n      result.description = FillDescription.NO_FIELD;\n      return result;\n    }\n\n    // Try to deduce the proper date format based on the first candidate element\n\n    (elements as HTMLInputElement[]).forEach((candidate) => {\n      // If placeholder doesn't match, fall back to checking the element's label\n      const { groups } =\n        expiryRegExp.exec(candidate.placeholder) ||\n        expiryRegExp.exec(candidate.alt) ||\n        expiryRegExp.exec(candidate.title) ||\n        expiryRegExp.exec(getLabel(candidate)) ||\n        {};\n\n      // If neither the placeholder nor the label indicate any sort of input\n      // format, use a default\n      if (!groups) {\n        this.populateInput(candidate, expMonth + \"/\" + expYear);\n\n        result.filled = true;\n        result.description = FillDescription.NO_INPUT_FORMAT;\n        return;\n      }\n\n      const yearStart = expYear.length - (groups?.year?.length || 4);\n      const input = expMonth + groups?.separator + expYear.substring(yearStart);\n      this.populateInput(candidate, input);\n      result.filled = true;\n    });\n\n    return result;\n  }\n\n  private fillAddressLevel1(\n    elements: Matches[\"addressLevel1\"],\n    addressLevel1: string\n  ) {\n    const result = { filled: false } as FillResult;\n    const selector = `option[value='${addressLevel1}' i],option[value='${stateAbbreviations[addressLevel1]}' i]`;\n\n    elements!.forEach((candidate) => {\n      if (candidate instanceof HTMLInputElement) {\n        this.populateInput(candidate, addressLevel1);\n\n        result.filled = true;\n      } else if (candidate instanceof HTMLSelectElement) {\n        let option: HTMLOptionElement | null | undefined =\n          candidate.querySelector<HTMLOptionElement>(selector);\n\n        if (!option) {\n          option = Array.from(candidate.options).find((opt) => {\n            const text = opt.text.trim().toLowerCase();\n\n            return (\n              text === addressLevel1?.toLowerCase() ||\n              text === stateAbbreviations[addressLevel1]?.toLowerCase()\n            );\n          });\n        }\n\n        if (option?.value?.length) {\n          this.populateSelect(candidate, option.value);\n          result.filled = true;\n        } else if (option) {\n          option.selected = true;\n\n          result.description = FillDescription.NO_OPTION_VALUE;\n          result.filled = true;\n        } else {\n          result.description = FillDescription.NO_OPTION;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  // Fill an input field with the given value\n  // Trigger events to simulate user interaction\n  private populateInput(\n    fieldElements: HTMLInputElement | HTMLInputElement[],\n    value = \"\"\n  ) {\n    const fields = [fieldElements].flat();\n    const lastChar = value.slice(-1);\n\n    fields.forEach((field) => {\n      // In addition to setting the field value, we need to fire events\n      // to simulate user interaction. This lets the client know the form\n      // values have changed, and triggers any subsequent event handlers\n      // Older sites or homerolled frameworks commonly look for the keyup or change event.\n      // See: http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n\n      field.focus();\n      this.dispatchKeyEvent(field, \"keydown\", lastChar);\n      this.dispatchKeyEvent(field, \"keypress\", lastChar);\n      field.value = value;\n      this.dispatchEvent(field, \"input\");\n      this.dispatchKeyEvent(field, \"keyup\", lastChar);\n      this.dispatchEvent(field, \"change\");\n\n      field.blur();\n    });\n  }\n\n  // Search for the given value in a select list and select it, if found.\n  // Trigger a events to simulate user interaction\n  private populateSelect(field: HTMLSelectElement, value = \"\") {\n    field.focus();\n    field.value = value;\n    this.dispatchEvent(field, \"change\");\n    field.blur();\n  }\n\n  // Trigger a key event on the given element\n  // The `key` value will be a single-character string representing the last\n  // character of the input value being simulated\n  private dispatchKeyEvent(target: Element, eventName: string, key: string) {\n    // Generate the code\n    // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code\n    const code = parseInt(key) ? `Digit${key}` : `Key${key.toUpperCase()}`;\n\n    target.dispatchEvent(\n      new KeyboardEvent(eventName, {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        key,\n        code,\n        keyCode: key.charCodeAt(0), // deprecated\n        which: key.charCodeAt(0), // deprecated\n        altKey: false,\n        shiftKey: false,\n        ctrlKey: false,\n      })\n    );\n  }\n\n  private dispatchEvent(target: Element, eventName: string) {\n    target.dispatchEvent(\n      new Event(eventName, {\n        bubbles: true,\n        cancelable: false,\n        composed: false,\n      })\n    );\n  }\n\n  // Propagates all the events associated with clicking an element\n  private triggerClick(ele: Element) {\n    try {\n      const events = [\"mouseenter\", \"mousedown\", \"mouseup\", \"click\"];\n\n      events.forEach((event) => {\n        ele.dispatchEvent(\n          new MouseEvent(event, {\n            bubbles: true,\n            cancelable: true,\n            view: window instanceof Window ? window : null,\n          })\n        );\n      });\n    } catch (e) {\n      console.error(\"Error triggering click on \", ele, \"Error=\", e);\n    }\n  }\n}\n","export enum EXTENSION_EVENTS {\n  CONSENT_SHOWN = \"Extension: Consent Shown\",\n  CONSENT_ACCEPTED = \"Extension: Consent Accepted\",\n  CONSENT_DECLINED = \"Extension: Consent Declined\",\n  CONSENT_DECLINE_CANCELLED = \"Extension: Consent Decline Cancelled\",\n  OPENED = \"Extension: Opened\",\n  DISMISSED = \"Extension: Dismissed\",\n  SIGN_UP = \"Extension: Sign Up\",\n  ACCOUNT_REDIRECT = \"Extension: Account Redirect\",\n  CHECKOUT = \"Extension: Checkout\",\n  DETECTED_CHECKOUT_FORM = \"Extension: Detected Checkout Form\",\n  FILL_CHECKOUT = \"Extension: Fill Checkout\",\n  FILL_CHECKOUT_NO_FORM = \"Extension: Fill Checkout No Form Detected\",\n  FILL_CHECKOUT_INPUT_FORMAT = \"Extension: Unable to Determine Input Field Format\",\n}\n\nexport enum USER_EVENTS {\n  LOGOUT = \"Extension: User Logout\",\n}\n\nexport enum CARD_EVENTS {\n  CLOSED = \"Extension: Card Closed\",\n  CREATED = \"Extension: Card Created\",\n  CREATED_BLOCKED = \"Extension: Card Create Blocked\",\n  PAUSED = \"Extension: Card Paused\",\n  RESUMED = \"Extension: Card Resumed\",\n  PAN_COPIED = \"Extension: Card PAN Copied\",\n  EXP_COPIED = \"Extension: Card EXP Copied\",\n  CVV_COPIED = \"Extension: Card CVV Copied\",\n  SET_FUNDING_SOURCE = \"Extension: Card Set Funding Source\",\n  SET_NICKNAME = \"Extension: Card Set Nickname\",\n  SET_NOTE = \"Extension: Card Set Note\",\n  SET_SPEND_LIMIT = \"Extension: Card Set Spend Limit\",\n  SHARED = \"Extension: Card Shared\",\n  VIEWED = \"Extension: Card Viewed\",\n}\n\nexport enum ERROR_EVENTS {\n  UNHANDLED = \"Extension: Unhandled Error\",\n}\n\nexport enum NOTIFICATION_EVENTS {\n  REQUESTED = \"Extension: Notifications Requested\",\n}\n\nexport enum SUBSCRIPTION_EVENTS {\n  UPGRADE_CLICKED = \"Extension: Subscription Upgrade Clicked\",\n}\n\nexport type EVENT_NAMES =\n  | EXTENSION_EVENTS\n  | CARD_EVENTS\n  | USER_EVENTS\n  | ERROR_EVENTS\n  | NOTIFICATION_EVENTS\n  | SUBSCRIPTION_EVENTS;\n\nexport interface Event {\n  name: EVENT_NAMES;\n  data?: {\n    [key: string]: any;\n  };\n}\n","import CheckoutParser from \"./parser\";\nimport {\n  FillDescription,\n  type FillResults,\n  type Matches,\n} from \"./checkout.types\";\nimport ExtensionApi from \"../extension\";\nimport \"./button\";\nimport createButton, { buttonSelector } from \"./button\";\nimport createInterstitial, {\n  frameSelector,\n  interstitialSelector,\n  setStyles,\n} from \"./interstitial\";\nimport type { MessageBody } from \"../extension/types\";\nimport CheckoutFiller from \"./filler\";\nimport { EXTENSION_EVENTS } from \"@/types/Event\";\nimport { isIOS, isIPhone } from \"../utils/utils\";\n\nconst documentIframeSelector = `iframe:not([name^='__privateStripeMetricsController'],[name^='__privateStripeController'],[title='reCAPTCHA'],${frameSelector})`;\nconst stripAnchorTag = (str: string) => str?.replace(/#.*$/, \"\");\n\ninterface FrameData {\n  src: string;\n  parent: string;\n  x: number;\n  y: number;\n  scrollX: number;\n  scrollY: number;\n}\n\nconst iframes: Map<string, FrameData> = new Map();\n\nfunction processIframe(\n  iframe: HTMLIFrameElement,\n  window: Window,\n  isTopWindow: boolean\n) {\n  const { x, y } = iframe.getBoundingClientRect();\n\n  return {\n    src: iframe.src,\n    parent: isTopWindow ? null : window.location.href,\n    x,\n    y,\n    scrollX: window.scrollX,\n    scrollY: window.scrollY,\n  };\n}\n\nexport default class Checkout {\n  private parser: CheckoutParser;\n  private isTopWindow: boolean = window === window.top;\n  private originalUrl = window.location.href;\n  private extensionApi = new ExtensionApi(\"checkout\");\n  private insertingButton = false;\n  private savedViewport = \"\";\n  attrs: Matches = {};\n\n  constructor(private hostname: string = \"\") {\n    this.parser = new CheckoutParser(hostname);\n\n    this.extensionApi.message.addListener(this.extensionEventsSubscriber);\n\n    // This needs to be on every window incase of an iframe\n    // relies on add button and button click event handlers\n    // to stop propagation and prevent default to keep this\n    // from firing when not needed\n\n    if (!isIOS()) {\n      window.addEventListener(\n        \"click\",\n        () => {\n          this.extensionApi.message.send({\n            target: \"checkout\",\n            event: \"removeButton\",\n          });\n        },\n        { passive: true }\n      );\n    }\n\n    if (this.isTopWindow) {\n      this.extensionApi.message.addListener(this.topWindowEventSubscriber);\n\n      if (!isIOS()) {\n        [\"scroll\", \"resize\"].forEach((event) => {\n          window.addEventListener(event, this.removeButton, {\n            passive: true,\n          });\n        });\n      } else {\n        [\"scroll\", \"resize\"].forEach((event) => {\n          window.visualViewport!.addEventListener(\n            event,\n            this.addUpdateButtonMobile,\n            { passive: true }\n          );\n        });\n      }\n    }\n  }\n\n  get found(): boolean {\n    return !!Object.keys(this.attrs).length;\n  }\n\n  private topWindowEventSubscriber = (\n    event: MessageBody,\n    _sender: any,\n    sendResponse: (response: any) => void\n  ) => {\n    if (event.target !== \"checkout\") {\n      return;\n    }\n\n    switch (event.event) {\n      case \"addButton\":\n        if (isIOS()) {\n          this.addUpdateButtonMobile();\n        } else {\n          this.addButton(event);\n        }\n\n        sendResponse({ success: true });\n        break;\n      case \"removeButton\":\n        this.removeButton();\n        sendResponse({ success: true });\n        break;\n      case \"removeInterstitial\":\n        this.removeInterstitial();\n        sendResponse({ success: true });\n        break;\n      case \"showInterstitial\":\n        this.addInterstitial();\n        sendResponse({ success: true });\n        break;\n      case \"updateInterstitialHeight\":\n        this.updateInterstitialHeight(event.payload!.height);\n        sendResponse({ success: true });\n        break;\n      case \"updateInterstitialStyles\":\n        this.updateInterstitialStyles(event.payload!.includeBg);\n        sendResponse({ success: true });\n        break;\n      case \"showCollapsedCard\":\n        if (event.payload?.cardUuid) {\n          this.removeInterstitial();\n          sendResponse({\n            success: this.showCollapsedCard(event.payload?.cardUuid),\n          });\n        }\n\n        break;\n      case \"iframeFound\":\n        iframes.set(event.payload!.src, event.payload as FrameData);\n        sendResponse({ success: true });\n        break;\n      default:\n        break;\n    }\n\n    // Keep the channel open for future messages\n    return true;\n  };\n\n  private extensionEventsSubscriber = (\n    event: MessageBody,\n    sender: any,\n    sendResponse: (response: any) => void\n  ) => {\n    let results: FillResults | false = {};\n\n    switch (event.event) {\n      case \"paymentInputsFound\":\n        if (this.found) {\n          sendResponse({ success: true });\n        }\n\n        break;\n      case \"fillCheckout\":\n        results = this.fillCheckout(event.payload);\n\n        if (Object.keys(results).length) {\n          /*\n            Send an event to the background script to log any fields we could\n            not determine the input format for.\n\n            Ignore \"field not found\" results here, because if a field is in\n            an IFRAME, it will report all the other fields as missing, and\n            we'll spam ourselves\n          */\n          const filtered = Object.entries(results).filter(\n            ([, { description }]) =>\n              description && description !== FillDescription.NO_FIELD\n          );\n\n          if (filtered.length) {\n            this.extensionApi.message\n              .send({\n                target: \"background\",\n                event: \"fillCheckoutResult\",\n                payload: {\n                  name: EXTENSION_EVENTS.FILL_CHECKOUT_INPUT_FORMAT,\n                  data: Object.fromEntries(filtered),\n                },\n              })\n              .finally(() => {\n                sendResponse({ success: true });\n              });\n          }\n        }\n\n        break;\n      case \"resumeParsing\":\n        this.findElements().finally(() => {\n          sendResponse({ success: true });\n        });\n        break;\n      case \"pauseParsing\":\n        // Remove current attached event listeners and auto fill button\n        // and stop parsing the page\n        this.removeEventListeners();\n        this.removeButton();\n        this.attrs = {};\n        break;\n      default:\n        break;\n    }\n\n    // Keep the channel open for future messages\n    return true;\n  };\n\n  async findElements(): Promise<void> {\n    document\n      .querySelectorAll<HTMLIFrameElement>(documentIframeSelector)\n      .forEach((iframe) => {\n        const payload = processIframe(iframe, window, this.isTopWindow);\n\n        this.extensionApi.message.send({\n          target: \"checkout\",\n          event: \"iframeFound\",\n          payload,\n        });\n      });\n\n    const result = await this.parser.scan();\n\n    Object.entries(result).forEach(([key, value]) => {\n      if (value.length) {\n        // @ts-ignore\n        this.attrs[key] = value;\n      }\n    });\n\n    if (this.found && isIOS()) {\n      this.extensionApi.message.send({\n        target: \"checkout\",\n        event: \"addButton\",\n      });\n      return;\n    } else if (this.found) {\n      this.addAttrListeners();\n    }\n  }\n\n  private addAttrListeners() {\n    Object.values(this.attrs).forEach((elements) => {\n      const lastEl = elements[elements.length - 1];\n\n      // We only want to add the 'P' button to the an input element\n      // and not a select, radio, checkbox, hidden, file etc input fields\n      if (\n        lastEl instanceof HTMLInputElement &&\n        ([\"text\", \"tel\", \"number\", \"password\", \"email\"].includes(lastEl.type) ||\n          !lastEl.hasAttribute(\"type\"))\n      ) {\n        // Since we could have _already_ attached the listeners to this element\n        // we need to remove them first to avoid duplicates\n        lastEl.removeEventListener(\"focus\", this.emitAddButton);\n        lastEl.removeEventListener(\"click\", this.emitAddButton);\n\n        lastEl.addEventListener(\"focus\", this.emitAddButton);\n        lastEl.addEventListener(\"click\", this.emitAddButton);\n      }\n    });\n  }\n\n  private removeEventListeners() {\n    Object.values(this.attrs).forEach((elements) => {\n      const lastEl = elements[elements.length - 1];\n\n      if (\n        lastEl instanceof HTMLInputElement &&\n        ([\"text\", \"tel\", \"number\", \"password\", \"email\"].includes(lastEl.type) ||\n          !lastEl.hasAttribute(\"type\"))\n      ) {\n        lastEl.removeEventListener(\"focus\", this.emitAddButton);\n        lastEl.removeEventListener(\"click\", this.emitAddButton);\n      }\n    });\n  }\n\n  private emitAddButton = async (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    // This ensures addButton only gets called once on initial focus\n    // but will still insert the button if a focused element is clicked\n    // and the button is not on the page\n    if (\n      event.type === \"click\" &&\n      event.target === document.activeElement &&\n      (document.querySelector<HTMLDivElement>(buttonSelector) ||\n        this.insertingButton)\n    ) {\n      return;\n    }\n\n    const currentTarget = event.target as HTMLInputElement;\n    const dimensions = currentTarget.getBoundingClientRect();\n    const styles = window.getComputedStyle(currentTarget);\n    let origin = window.location.href;\n    let adyen;\n\n    // Adyen has the same URL for each of their embedded iframes\n    // but they add a title attribute to each iframe that says which\n    // element it is for. This is brittle and very much a hack, but\n    // due to cross-domain restrictions we cant get any other information\n    // about the iframe content and which element was clicked\n    if (!this.isTopWindow && window.location.href.includes(\"adyen.com\")) {\n      const head = document.querySelector(\"head[title]\");\n      adyen = head?.getAttribute(\"title\");\n      // This solves for an issue where an iframe uses in-memory\n      // navigation to change the URL. This is common for SPAs\n    } else if (!this.isTopWindow && origin !== this.originalUrl) {\n      origin = this.originalUrl;\n    }\n\n    // default size of the icon in the css is 24px\n    let size = 24;\n\n    if (dimensions.height > 48) {\n      size = 36;\n    } else if (dimensions.height <= 24) {\n      size = Math.min(18, dimensions.height - 2);\n    }\n\n    const top = dimensions.top + (dimensions.height - size) / 2;\n    // If the padding to the right is larger than our default\n    // we assume there's an icon we don't want our logo to be\n    // on top of\n    const left =\n      dimensions.right -\n      size -\n      Math.max(Number(styles.paddingRight.replace(\"px\", \"\")), 8);\n\n    this.extensionApi.message.send({\n      target: \"checkout\",\n      event: \"addButton\",\n      payload: {\n        origin,\n        inFrame: !this.isTopWindow,\n        adyen,\n        size,\n        top,\n        left,\n      },\n    });\n  };\n\n  // This method is ONLY run from the top window\n  async addButton(data: any) {\n    if (this.insertingButton) {\n      return;\n    }\n\n    this.insertingButton = true;\n    let { size, top, left, origin, adyen, inFrame } = data.payload;\n\n    if (inFrame) {\n      let iframe;\n\n      if (adyen) {\n        const frame = document.querySelector<HTMLIFrameElement>(\n          `iframe[title=\"${adyen}\"]`\n        );\n\n        if (frame) {\n          iframe = processIframe(frame, window, true);\n        }\n      } else {\n        iframe = iframes.get(origin);\n      }\n\n      if (!iframe) {\n        // if no match was found, try to find a key that starts with the origin\n        // in case one or the other has an anchor tag appended\n        const strippedOrigin = stripAnchorTag(origin);\n        const key = [...iframes.keys()].find((key) => {\n          return key.startsWith(strippedOrigin);\n        });\n        iframe = iframes.get(key!);\n      }\n\n      if (iframe) {\n        do {\n          top += iframe!.y;\n          left += iframe!.x;\n\n          if (!iframe!.parent) {\n            if (iframe!.scrollY !== window.scrollY) {\n              top += iframe!.scrollY - window.scrollY;\n            }\n\n            if (iframe!.scrollX !== window.scrollX) {\n              left += iframe!.scrollX - window.scrollX;\n            }\n\n            iframe = undefined;\n          } else {\n            iframe = iframes.get(iframe!.parent);\n          }\n        } while (iframe);\n      }\n    }\n\n    // Account for layout shifts caused by the mobile overlays, for ex:\n    // the on-screen keyboard. Will only be non-zero on mobile devices\n    top += window.visualViewport?.offsetTop || 0;\n\n    const currentButton =\n      document.querySelector<HTMLDivElement>(buttonSelector);\n    const button = currentButton || createButton();\n\n    button.style.setProperty(\"top\", `${top}px`);\n    button.style.setProperty(\"left\", `${left}px`);\n\n    if (size) {\n      button.style.setProperty(\"height\", `${size}px`);\n      button.style.setProperty(\"width\", `${size}px`);\n    }\n\n    if (!currentButton) {\n      // This should match the value we use when creating a new card\n      const modifiedHostname = this.hostname.replace(\"www.\", \"\");\n\n      button.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.removeInterstitial();\n        this.addInterstitial({\n          page: \"suggestions\",\n          query: `q=${modifiedHostname}`,\n        });\n      });\n    }\n\n    // 15ms timeout is to try to make sure our button is the last element\n    // to be added to the DOM. This is to try to make sure it is on top\n    // of the 1Password button\n    setTimeout(() => {\n      document.body.appendChild(button);\n      this.insertingButton = false;\n    }, 15);\n  }\n\n  // Mobile button is only shown in the top window, not per-input.\n  addUpdateButtonMobile() {\n    const size = 44;\n    const edgeSpace = \".5rem\";\n\n    // Account for layout shifts caused by the mobile overlays, for ex:\n    // the on-screen keyboard. Will only be non-zero on mobile devices\n    const top =\n      window.visualViewport!.height + window.visualViewport!.offsetTop - size;\n\n    const currentButton =\n      document.querySelector<HTMLDivElement>(buttonSelector);\n    const button = currentButton || createButton();\n\n    button.style.setProperty(\"top\", `calc(${top}px - ${edgeSpace})`);\n\n    if (!currentButton) {\n      button.style.setProperty(\"left\", `${edgeSpace}`);\n\n      // This should match the value we use when creating a new card\n      const modifiedHostname = this.hostname.replace(\"www.\", \"\");\n\n      button.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.removeInterstitial();\n        this.addInterstitial({\n          page: \"suggestions\",\n          query: `q=${modifiedHostname}`,\n        });\n      });\n    }\n\n    document.body.appendChild(button);\n  }\n\n  private removeButton() {\n    // If checkout is detected on mobile, button is created and the position\n    // will be updated, but never removed\n    document.querySelector<HTMLDivElement>(buttonSelector)?.remove();\n  }\n\n  addInterstitial(options: any = {}) {\n    if (document.querySelector<HTMLDivElement>(interstitialSelector)) {\n      return;\n    }\n\n    const appUrl = this.extensionApi.getURL(\"interstitial.html\");\n    const url = new URL(appUrl);\n\n    if (options.query) {\n      url.searchParams.set(\"query\", options.query);\n    }\n\n    if (options.page) {\n      url.searchParams.set(\"page\", options.page);\n    }\n\n    if (isIPhone()) {\n      const pageViewport = document.querySelector(\n        \"meta[name='viewport']\"\n      ) as HTMLMetaElement;\n      this.savedViewport = pageViewport?.content || \"\";\n      const viewportOptions = pageViewport?.content\n        .split(\",\")\n        .filter((item) => !!item);\n      viewportOptions.push(\"maximum-scale=1.0\");\n      pageViewport.content = viewportOptions.join(\",\");\n    }\n\n    const interstitial = createInterstitial(url.toString());\n    document.body.appendChild(interstitial);\n  }\n\n  private updateInterstitialHeight(height: number) {\n    const iframe = document.querySelector<HTMLIFrameElement>(frameSelector);\n    iframe?.style.setProperty(\"height\", `${height}px`);\n  }\n\n  private updateInterstitialStyles(includeBg: boolean) {\n    if (isIPhone()) {\n      const wrapper =\n        document.querySelector<HTMLDivElement>(interstitialSelector);\n\n      if (!wrapper) {\n        return;\n      }\n\n      setStyles(wrapper, includeBg);\n    }\n  }\n\n  private removeInterstitial() {\n    document.querySelector<HTMLDivElement>(interstitialSelector)?.remove();\n\n    if (this.savedViewport) {\n      const pageViewport = document.querySelector(\n        \"meta[name='viewport']\"\n      ) as HTMLMetaElement;\n      pageViewport.content = this.savedViewport;\n      this.savedViewport = \"\";\n    }\n  }\n\n  private fillCheckout(cardData: Record<string, any> = {}) {\n    if (!this.found) {\n      return {};\n    }\n\n    const filler = new CheckoutFiller(this.attrs, cardData);\n    const results = filler.fillAllFields();\n\n    return results;\n  }\n\n  private showCollapsedCard(cardUuid: string) {\n    if (!cardUuid) {\n      return false;\n    }\n\n    this.addInterstitial({\n      page: \"card-collapsed\",\n      query: `uuid=${cardUuid}`,\n    });\n\n    return true;\n  }\n}\n","import ExtensionApi from \"./index\";\nimport type * as Types from \"./types\";\n\nexport { Types };\nexport default new ExtensionApi(\"app\");\n","import appExtensionApi from \"../extension/appExtensionApi\";\nimport { isFirefox } from \"@/lib/utils/utils\";\nimport { CONSENT_KEY, ACTIVITY_CONSENT_KEY } from \"./types\";\n\nexport const hasDataConsent = async () => {\n  const dataConsent = (await appExtensionApi.storage.get(CONSENT_KEY)) || {};\n  return !!dataConsent[CONSENT_KEY];\n};\n\nexport const setDataConsent = () => {\n  return appExtensionApi.storage.set({\n    [CONSENT_KEY]: true,\n  });\n};\n\nexport const hasActivityConsent = async () => {\n  if (!isFirefox()) {\n    return true;\n  }\n\n  const activityConsent =\n    (await appExtensionApi.storage.get(ACTIVITY_CONSENT_KEY)) || {};\n  return !!activityConsent[ACTIVITY_CONSENT_KEY];\n};\n\nexport const isActivityConsentSet = async () => {\n  if (!isFirefox()) {\n    return true;\n  }\n\n  const activityConsent = await appExtensionApi.storage.get(\n    ACTIVITY_CONSENT_KEY\n  );\n  return activityConsent !== undefined;\n};\n\nexport const setActivityConsent = (value: Boolean) => {\n  return appExtensionApi.storage.set({\n    [ACTIVITY_CONSENT_KEY]: value,\n  });\n};\n","import Checkout from \"@/lib/checkout\";\nimport { debounce } from \"@/lib/utils/utils\";\nimport { hasActivityConsent } from \"@/lib/updates\";\nimport { version } from \"../../package.json\";\n\nconst checkout = new Checkout(window.location.hostname);\n\nfunction testSkip(node: Node) {\n  return (\n    // @ts-ignore\n    node.id === \"pwp-button\" ||\n    // @ts-ignore\n    node.id === \"pwp-interstitial\" ||\n    node.nodeName === \"COM-1PASSWORD-MENU\" ||\n    node.nodeName === \"COM-1PASSWORD-BUTTON\"\n  );\n}\n\nconst debouncedFindElements = debounce((mutations: MutationRecord[]) => {\n  let skip = false;\n\n  // Small optimization to avoid scanning the document again since we\n  // know we don't have to\n  mutations?.forEach((mutation) => {\n    if (mutation.type !== \"childList\") {\n      return;\n    }\n\n    if (mutation.addedNodes.length === 1) {\n      skip = testSkip(mutation.addedNodes[0]);\n    }\n\n    if (mutation.removedNodes.length === 1 && !skip) {\n      skip = testSkip(mutation.removedNodes[0]);\n    }\n  });\n\n  if (skip) {\n    return;\n  }\n\n  checkout.findElements();\n});\n\n// Observe the document for changes only if the user has given consent for activity tracking.\n// The MutationObserver can probably be moved to Checkout class for better\n// communication between background and content scripts.\nhasActivityConsent().then((consent) => {\n  if (!consent) {\n    return;\n  }\n\n  const observer = new MutationObserver(debouncedFindElements);\n\n  // Start observing the target node for configured mutations\n  observer.observe(document.body, {\n    // We should not listen to _ALL_ attributes, but only to the ones that\n    // are relevant to payments inputs.\n    attributeFilter: [\n      \"aria-disabled\",\n      \"aria-hidden\",\n      \"class\",\n      \"maxlength\",\n      \"name\",\n      \"pattern\",\n      \"placeholder\",\n      \"size\",\n      \"title\",\n      \"type\",\n    ],\n    childList: true,\n    characterData: true,\n    subtree: true,\n  });\n\n  // Chrome does not register immediately use the mutation observer on\n  // iframe content so we need to manually trigger the first scan\n  debouncedFindElements();\n});\n\n// Signal to Privacy Web that the extension is installed\ndocument\n  ?.querySelector(\"body\")\n  ?.setAttribute(\"data-extension-installed\", version);\n\nexport {};\n"],"names":["document","_a","key","candidates","processFields","FillDescription","wrapperStyles","wrapperStylesMobile","getStyleStr","styles","wrapperId","options","option","EXTENSION_EVENTS","window"],"mappings":"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;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,cAAc;AAAA,IAChB;AAAA,IACA;AAAA,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"}