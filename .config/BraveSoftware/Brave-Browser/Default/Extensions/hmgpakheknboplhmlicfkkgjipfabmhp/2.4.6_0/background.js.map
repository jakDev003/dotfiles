{"version":3,"file":"background.js","sources":["../../src/lib/extension/management.ts","../../src/lib/extension/message.ts","../../src/lib/updates/types.ts","../../src/lib/extension/storage.ts","../../src/lib/extension/index.ts","../../src/lib/extension/appExtensionApi.ts","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/lib/request/format.ts","../../src/lib/request/index.ts","../../src/lib/updates/index.ts","../../src/apis/event/event.ts","../../src/types/Event.ts","../../src/scripts/background.ts"],"sourcesContent":["import type { ExtensionContext } from \"./types\";\n\n// Note: additional management methods might require adding manifest permissions\n// https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/management\n\nexport default class Management {\n  private context?: ExtensionContext;\n\n  constructor(context?: ExtensionContext) {\n    this.context = context;\n  }\n\n  uninstall() {\n    const options: chrome.management.UninstallOptions = {\n      showConfirmDialog: true,\n    };\n\n    return this.context?.management.uninstallSelf(options);\n  }\n}\n","import type { ExtensionContext, MessageBody, SendMessageBody } from \"./types\";\n\nexport default class Message {\n  private context?: ExtensionContext;\n  private namespace: string;\n\n  constructor(namepsace: string, context?: ExtensionContext) {\n    this.namespace = namepsace;\n    this.context = context;\n  }\n\n  async send(message: SendMessageBody): Promise<any> {\n    const data = {\n      ...message,\n      from: this.namespace,\n    } as MessageBody;\n\n    return await this.context?.runtime?.sendMessage(data);\n  }\n\n  addListener(\n    callback: (\n      message: any,\n      sender: chrome.runtime.MessageSender,\n      sendResponse: any\n    ) => void\n  ) {\n    this.context?.runtime?.onMessage?.addListener(callback);\n  }\n}\n","// These keys should never change\nexport const UPDATE_KEY = \"updatesViewed\";\nexport const CONSENT_KEY = \"dataConsentAgreed\";\nexport const ACTIVITY_CONSENT_KEY = \"activityConsentAgreed\";\n","import type { ExtensionContext } from \"./types\";\nimport { UPDATE_KEY, CONSENT_KEY } from \"@/lib/updates/types\";\n\nexport default class Storage {\n  private context?: ExtensionContext;\n\n  constructor(context?: ExtensionContext) {\n    this.context = context;\n  }\n\n  async set(items: Record<string, any>): Promise<void> {\n    for (const key in items) {\n      items[key] = JSON.stringify(items[key]);\n    }\n\n    if (this.context?.storage) {\n      await this.context.storage.local.set(items);\n      return;\n    }\n\n    for (const key in items) {\n      localStorage.setItem(key, items[key]);\n    }\n  }\n\n  async get(\n    keys?: string | string[] | Record<string, any> | null\n  ): Promise<Record<string, any>> {\n    let items: Record<string, any> = {};\n    const includesDefaults = !!(\n      keys &&\n      typeof keys !== \"string\" &&\n      !Array.isArray(keys)\n    );\n\n    if (this.context?.storage) {\n      items = await this.context.storage.local.get(keys);\n\n      for (const key in items) {\n        if (typeof items[key] === \"string\") {\n          items[key] = JSON.parse(items[key]);\n        }\n      }\n\n      return items;\n    }\n\n    let iterableKeys = keys;\n\n    if (typeof keys === \"string\") {\n      iterableKeys = [keys];\n    } else if (keys && !Array.isArray(keys)) {\n      iterableKeys = Object.keys(keys);\n    }\n\n    if (!iterableKeys) {\n      items = { ...localStorage };\n    } else {\n      (iterableKeys as string[]).forEach((key) => {\n        items[key] = localStorage.getItem(key);\n\n        if (includesDefaults && !items[key]) {\n          items[key] = keys[key];\n        }\n      });\n    }\n\n    for (const key in items) {\n      if (typeof items[key] === \"string\") {\n        items[key] = JSON.parse(items[key]);\n      }\n    }\n\n    return items;\n  }\n\n  async remove(keys: string | string[]): Promise<void> {\n    if (this.context?.storage) {\n      await this.context.storage.local.remove(keys);\n      return;\n    }\n\n    const iterableKeys = Array.isArray(keys) ? keys : [keys];\n    iterableKeys.forEach((key) => localStorage.removeItem(key));\n  }\n\n  async clear({ keepDeviceId = false } = {}): Promise<void> {\n    // set during remember device TFA step\n    // and should not be cleared from a 401 but should\n    // be cleared when the user logs out\n    const { deviceId } = await this.get(\"deviceId\");\n\n    // Retain this so we don't show the product update screen again after logout\n    const updates = await this.get(UPDATE_KEY);\n\n    // Retain this so we don't show the data consent screen again after logout\n    const dataConsent = await this.get(CONSENT_KEY);\n\n    if (this.context?.storage) {\n      await this.context.storage.local.clear();\n    } else {\n      localStorage.clear();\n    }\n\n    if (deviceId && keepDeviceId) {\n      await this.set({ deviceId });\n    }\n\n    if (updates[UPDATE_KEY]) {\n      await this.set(updates);\n    }\n\n    if (dataConsent[CONSENT_KEY]) {\n      await this.set(dataConsent);\n    }\n  }\n}\n","import Management from \"./management\";\nimport Message from \"./message\";\nimport Storage from \"./storage\";\nimport type { ExtensionContext, ExtensionEvents, Manifest } from \"./types\";\n\nexport default class ExtensionApi {\n  private _context?: ExtensionContext;\n  storage: Storage;\n  message: Message;\n  management: Management;\n\n  constructor(namespace: string) {\n    // @ts-ignore\n    if (typeof browser !== \"undefined\") {\n      // @ts-ignore\n      this._context = browser;\n    } else if (typeof chrome !== \"undefined\") {\n      this._context = chrome;\n    }\n\n    if (this._context) {\n      this._context.runtime?.connect();\n    }\n\n    this.storage = new Storage(this._context);\n    this.message = new Message(namespace, this._context);\n    this.management = new Management(this._context);\n  }\n\n  get context(): ExtensionContext | undefined {\n    return this._context;\n  }\n\n  get popup(): boolean {\n    if (this.context?.extension?.getViews) {\n      return !!this.context?.extension?.getViews({ type: \"popup\" })?.length;\n    }\n\n    return false;\n  }\n\n  getManifest(): Manifest {\n    if (!this.context) {\n      return {} as Manifest;\n    }\n\n    return this.context.runtime.getManifest();\n  }\n\n  getURL(url: string) {\n    if (!this.context) {\n      return \"\";\n    }\n\n    return this.context.runtime?.getURL(url);\n  }\n\n  async getBrowserInfo() {\n    // Firefox only for now, which works well for our purposes\n    // @ts-ignore\n    if (this.context?.runtime?.getBrowserInfo) {\n      // @ts-ignore\n      return this.context.runtime.getBrowserInfo();\n    }\n\n    return {\n      name: \"\",\n      vendor: \"\",\n      version: \"\",\n      buildID: \"\",\n    };\n  }\n\n  addListener(event: ExtensionEvents, callback: any) {\n    if (!this.context) {\n      return;\n    }\n\n    this.context.runtime[event].addListener(callback);\n  }\n\n  addBrowserActionListener(callback: any) {\n    if (!this.context) {\n      return;\n    }\n\n    this.context.action.onClicked.addListener(callback);\n  }\n\n  async getCurrentTab(): Promise<chrome.tabs.Tab | undefined> {\n    if (!this.context || !this.context.tabs) {\n      return;\n    }\n\n    const [tab] = await this.context.tabs.query({\n      active: true,\n      currentWindow: true,\n    });\n\n    return tab;\n  }\n\n  addTabListener(listener: any) {\n    this.context?.tabs?.onUpdated.addListener(listener);\n  }\n}\n","import ExtensionApi from \"./index\";\nimport type * as Types from \"./types\";\n\nexport { Types };\nexport default new ExtensionApi(\"app\");\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import type { ServiceWorkerApiResponse } from \"../extension/types\";\n\nexport async function transformFetchResponse(response: Response) {\n  const { ok, status, url } = response;\n  const headers = Object.fromEntries(response.headers.entries());\n\n  const respObj: ServiceWorkerApiResponse = {\n    data: undefined,\n    ok,\n    status,\n    url,\n    headers,\n  };\n\n  if (response.ok) {\n    try {\n      respObj.data = await response.json();\n    } catch (err) {\n      // noop\n    }\n  } else {\n    try {\n      respObj.data = JSON.parse(await response.clone().text());\n    } catch (err) {\n      respObj.text = await response.text();\n    }\n  }\n\n  return respObj;\n}\n\nexport function transformFetchError(\n  err: any,\n  url: ServiceWorkerApiResponse[\"url\"]\n) {\n  return {\n    data: undefined,\n    ok: false,\n    url,\n    text: err.message,\n  };\n}\n\nexport function removeEmptyParams(params: Record<string, any> = {}) {\n  return Object.fromEntries(\n    Object.entries(params || {}).filter(([, value]) => value !== undefined)\n  );\n}\n","import extensionApi from \"@/lib/extension/appExtensionApi\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport type { ServiceWorkerApiResponse } from \"../extension/types\";\nimport { removeEmptyParams } from \"./format\";\n\nconst apiUrl = import.meta.env.EXPOSED_PRIVACY_WEB_BASE_URL;\n\nexport type ApiResponse<T = any> = ServiceWorkerApiResponse<T>;\nexport type ApiError = Error;\n\nexport class PrivacyApi {\n  readonly appVersion: string = \"\";\n  readonly apiVersion: string;\n  readonly baseURL: string;\n\n  constructor(version: \"1\" | \"2\" = \"1\") {\n    try {\n      this.appVersion = extensionApi.getManifest()?.version || this.appVersion;\n    } catch (err) {\n      // noop\n    }\n\n    this.apiVersion = version;\n    this.baseURL = `${apiUrl}/api/v${version}/extension`;\n  }\n\n  get(url: string, params?: Record<string, any>, config?: any) {\n    return this.request(url, \"GET\", config, params);\n  }\n\n  post(url: string, data?: any, config?: RequestInit) {\n    return this.request(url, \"POST\", config, {}, data);\n  }\n\n  patch(url: string, data?: any, config?: RequestInit) {\n    return this.request(url, \"PATCH\", config, {}, data);\n  }\n\n  put(url: string, data?: any, config?: RequestInit) {\n    return this.request(url, \"PUT\", config, {}, data);\n  }\n\n  delete(url: string, config?: RequestInit) {\n    return this.request(url, \"DELETE\", config, {});\n  }\n\n  // Wrap fetch to automatically include request headers\n  // and to handle error responses\n  private async request(\n    url: string,\n    method: string,\n    config: RequestInit = {},\n    params?: Record<string, any>,\n    body?: Record<string, any>\n  ) {\n    config = JSON.parse(JSON.stringify(config));\n    body = JSON.parse(JSON.stringify(body || {}));\n\n    params = removeEmptyParams(params);\n    await PrivacyApi.authTokenInterceptor(config);\n    await PrivacyApi.setSessionIdInterceptor(config);\n    PrivacyApi.setApiHeaders(config);\n\n    url = this.baseURL + url;\n\n    return extensionApi.message\n      .send({\n        event: \"sendApiRequest\",\n        payload: { url, method, params, body, config },\n      })\n      .then(PrivacyApi.responseInterceptor);\n  }\n\n  private static async responseInterceptor(response: ServiceWorkerApiResponse) {\n    if (response.ok) {\n      return response;\n    }\n\n    const isLogin = response.url?.endsWith(\"/auth/login\");\n\n    if (!isLogin && response.status === 401) {\n      try {\n        await extensionApi.storage.clear({ keepDeviceId: true });\n      } catch (err) {\n        // noop\n      } finally {\n        // @ts-ignore\n        window.location.assign(\n          extensionApi.popup ? \"/index.html\" : \"/interstitial.html\"\n        );\n      }\n\n      return response;\n    }\n\n    const errorData = response.data || { message: response.text };\n    return Promise.reject(errorData);\n  }\n\n  private static async authTokenInterceptor(config: RequestInit) {\n    try {\n      const { token } = await extensionApi.storage.get(\"token\");\n\n      if (token) {\n        config.headers = {\n          ...config.headers,\n          Authorization: `Bearer ${token}`,\n        };\n      }\n    } catch (err) {\n      // noop\n    }\n\n    return config;\n  }\n\n  private static async setSessionIdInterceptor(\n    config: RequestInit\n  ): Promise<Record<string, any>> {\n    let sessionID;\n\n    try {\n      const { sessionID: session } = await extensionApi.storage.get(\n        \"sessionID\"\n      );\n      sessionID = session;\n    } catch (err) {\n      // noop\n    }\n\n    if (!sessionID) {\n      sessionID = uuidv4();\n\n      try {\n        await extensionApi.storage.set({ sessionID });\n      } catch (err) {\n        // noop\n      }\n    }\n\n    config.headers = {\n      ...config.headers,\n      sessionID,\n    };\n\n    return config;\n  }\n\n  static setApiHeaders(config: RequestInit) {\n    config.headers = {\n      \"Content-Type\": \"application/json\",\n      \"x-extension-id\": \"djEuMC4x\",\n      \"x-extension-version\": extensionApi.getManifest()?.version || \"\",\n      ...config.headers,\n    };\n    return config;\n  }\n}\n\nconst v1Api = new PrivacyApi();\nconst v2Api = new PrivacyApi(\"2\");\n\nexport { v1Api, v2Api };\n","import appExtensionApi from \"../extension/appExtensionApi\";\nimport { isFirefox } from \"@/lib/utils/utils\";\nimport { CONSENT_KEY, ACTIVITY_CONSENT_KEY } from \"./types\";\n\nexport const hasDataConsent = async () => {\n  const dataConsent = (await appExtensionApi.storage.get(CONSENT_KEY)) || {};\n  return !!dataConsent[CONSENT_KEY];\n};\n\nexport const setDataConsent = () => {\n  return appExtensionApi.storage.set({\n    [CONSENT_KEY]: true,\n  });\n};\n\nexport const hasActivityConsent = async () => {\n  if (!isFirefox()) {\n    return true;\n  }\n\n  const activityConsent =\n    (await appExtensionApi.storage.get(ACTIVITY_CONSENT_KEY)) || {};\n  return !!activityConsent[ACTIVITY_CONSENT_KEY];\n};\n\nexport const isActivityConsentSet = async () => {\n  if (!isFirefox()) {\n    return true;\n  }\n\n  const activityConsent = await appExtensionApi.storage.get(\n    ACTIVITY_CONSENT_KEY\n  );\n  return activityConsent !== undefined;\n};\n\nexport const setActivityConsent = (value: Boolean) => {\n  return appExtensionApi.storage.set({\n    [ACTIVITY_CONSENT_KEY]: value,\n  });\n};\n","import { hasActivityConsent } from \"@/lib/updates\";\nimport type { Event } from \"./../../types/Event\";\nimport { v1Api, type ApiResponse } from \"@/lib/request\";\n\nconst EVENT_ROUTE = \"/event\";\n\nexport const EVENT_ENDPOINTS = {\n  track: `${EVENT_ROUTE}/track`,\n  log: `${EVENT_ROUTE}/log`,\n  error: `${EVENT_ROUTE}/error`,\n};\n\nexport const track = async (event: Event): Promise<ApiResponse<any>> => {\n  const activityConsent = await hasActivityConsent();\n\n  if (!activityConsent) {\n    return;\n  }\n\n  return v1Api.post(EVENT_ENDPOINTS.track, { event });\n};\n\nexport const log = (events: Event[]): Promise<ApiResponse<any>> => {\n  return recordLog(events, false);\n};\n\nexport const error = (events: Event[]): Promise<ApiResponse<any>> => {\n  return recordLog(events, true);\n};\n\nconst recordLog = async (\n  events: Event[],\n  isError: boolean = false\n): Promise<ApiResponse<any>> => {\n  const activityConsent = await hasActivityConsent();\n\n  if (!activityConsent) {\n    return;\n  }\n\n  const body = {\n    events,\n  };\n\n  if (isError) {\n    return v1Api.post(EVENT_ENDPOINTS.error, body);\n  } else {\n    return v1Api.post(EVENT_ENDPOINTS.log, body);\n  }\n};\n","export enum EXTENSION_EVENTS {\n  CONSENT_SHOWN = \"Extension: Consent Shown\",\n  CONSENT_ACCEPTED = \"Extension: Consent Accepted\",\n  CONSENT_DECLINED = \"Extension: Consent Declined\",\n  CONSENT_DECLINE_CANCELLED = \"Extension: Consent Decline Cancelled\",\n  OPENED = \"Extension: Opened\",\n  DISMISSED = \"Extension: Dismissed\",\n  SIGN_UP = \"Extension: Sign Up\",\n  ACCOUNT_REDIRECT = \"Extension: Account Redirect\",\n  CHECKOUT = \"Extension: Checkout\",\n  DETECTED_CHECKOUT_FORM = \"Extension: Detected Checkout Form\",\n  FILL_CHECKOUT = \"Extension: Fill Checkout\",\n  FILL_CHECKOUT_NO_FORM = \"Extension: Fill Checkout No Form Detected\",\n  FILL_CHECKOUT_INPUT_FORMAT = \"Extension: Unable to Determine Input Field Format\",\n}\n\nexport enum USER_EVENTS {\n  LOGOUT = \"Extension: User Logout\",\n}\n\nexport enum CARD_EVENTS {\n  CLOSED = \"Extension: Card Closed\",\n  CREATED = \"Extension: Card Created\",\n  CREATED_BLOCKED = \"Extension: Card Create Blocked\",\n  PAUSED = \"Extension: Card Paused\",\n  RESUMED = \"Extension: Card Resumed\",\n  PAN_COPIED = \"Extension: Card PAN Copied\",\n  EXP_COPIED = \"Extension: Card EXP Copied\",\n  CVV_COPIED = \"Extension: Card CVV Copied\",\n  SET_FUNDING_SOURCE = \"Extension: Card Set Funding Source\",\n  SET_NICKNAME = \"Extension: Card Set Nickname\",\n  SET_NOTE = \"Extension: Card Set Note\",\n  SET_SPEND_LIMIT = \"Extension: Card Set Spend Limit\",\n  SHARED = \"Extension: Card Shared\",\n  VIEWED = \"Extension: Card Viewed\",\n}\n\nexport enum ERROR_EVENTS {\n  UNHANDLED = \"Extension: Unhandled Error\",\n}\n\nexport enum NOTIFICATION_EVENTS {\n  REQUESTED = \"Extension: Notifications Requested\",\n}\n\nexport enum SUBSCRIPTION_EVENTS {\n  UPGRADE_CLICKED = \"Extension: Subscription Upgrade Clicked\",\n}\n\nexport type EVENT_NAMES =\n  | EXTENSION_EVENTS\n  | CARD_EVENTS\n  | USER_EVENTS\n  | ERROR_EVENTS\n  | NOTIFICATION_EVENTS\n  | SUBSCRIPTION_EVENTS;\n\nexport interface Event {\n  name: EVENT_NAMES;\n  data?: {\n    [key: string]: any;\n  };\n}\n","import { v1Api, PrivacyApi } from \"@/lib/request\";\nimport { EVENT_ENDPOINTS } from \"@/apis/event/event\";\nimport { EXTENSION_EVENTS } from \"@/types/Event\";\nimport ExtensionApi from \"@/lib/extension\";\nimport {\n  transformFetchError,\n  transformFetchResponse,\n} from \"@/lib/request/format\";\nimport type { BackgroundRequest } from \"@/lib/request/request.types\";\nimport { hasDataConsent } from \"@/lib/updates\";\n\nconst extensionApi = new ExtensionApi(\"background\");\nconst DEFAULT_TIMEOUT = 25_000;\n\nfunction sendRequest({ url, method, params, body, config }: BackgroundRequest) {\n  const headers = config?.headers || {};\n  const controller = new AbortController();\n\n  const reqInit: RequestInit = {\n    method,\n    headers,\n    signal: controller.signal,\n  };\n\n  if (method === \"GET\" && params) {\n    url += `?${new URLSearchParams(params).toString()}`;\n  } else if (method !== \"DELETE\") {\n    reqInit.body = JSON.stringify(body);\n  }\n\n  // Even though this is a timeout, we still resolve instead of rejecting it,\n  // to be consistent with the Fetch API\n  const timeoutPromise: Promise<Response> = new Promise((resolve) => {\n    setTimeout(() => {\n      controller.abort();\n      resolve(\n        new Response(\"Request timed out\", {\n          status: 408,\n          statusText: \"Request timed out\",\n        })\n      );\n    }, DEFAULT_TIMEOUT);\n  });\n\n  return Promise.race([fetch(url, reqInit), timeoutPromise]);\n}\n\nconst onDisconnect = () => {\n  sendRequest({\n    url: v1Api.baseURL + EVENT_ENDPOINTS.track,\n    method: \"POST\",\n    body: {\n      name: EXTENSION_EVENTS.DISMISSED,\n    },\n    config: PrivacyApi.setApiHeaders({}),\n  });\n};\n\nextensionApi.addListener(\"onInstalled\", async () => {\n  const agreed = await hasDataConsent();\n  const info = await extensionApi.getBrowserInfo();\n\n  if (agreed || info.name !== \"Firefox\") {\n    return;\n  }\n\n  const url = extensionApi.getURL(\"install.html\");\n  await extensionApi.context?.tabs?.create({ url });\n});\n\nextensionApi.addListener(\"onConnect\", (port: any) => {\n  if (port.name === \"popup\") {\n    port.onDisconnect.addListener(onDisconnect);\n  }\n});\n\nconst tabHasContent = (tab: chrome.tabs.Tab) => {\n  return tab.url?.startsWith(\"http\");\n};\n\n// When toolbar icon is clicked and the tab supports content scripts,\n// send a message to show the interstitial\nextensionApi.addBrowserActionListener(async (tab: chrome.tabs.Tab) => {\n  const approve = await extensionApi.context?.permissions.request({\n    origins: [\"<all_urls>\"],\n  });\n\n  if (!approve) {\n    return;\n  }\n\n  if (tabHasContent(tab)) {\n    sendMessageToActiveTab({ target: \"checkout\", event: \"showInterstitial\" });\n  }\n});\n\n// When any aspect of a tab changes, check if it supports content scripts and\n// set the behavior of the toolbar icon to show either the interstitial or popup\nextensionApi.addTabListener(\n  (tabId: number, _changeInfo: any, tab: chrome.tabs.Tab) => {\n    const popup = tabHasContent(tab) ? \"\" : \"index.html\";\n    extensionApi.context?.action.setPopup({ popup, tabId });\n  }\n);\n\n// Abstract out the async operations involved in sending a message to a tab\n// for use in the message bus below\nconst sendMessageToActiveTab = async (message: any) => {\n  const tab = await extensionApi.getCurrentTab();\n\n  if (!tab) {\n    return;\n  }\n\n  const response = await extensionApi.context?.tabs?.sendMessage(\n    tab.id!,\n    message\n  );\n\n  return response;\n};\n\nconst uninstallExtension = async (sendResponse: any) => {\n  try {\n    await extensionApi.management.uninstall();\n    sendResponse(true);\n  } catch (err) {\n    sendResponse(false);\n  }\n};\n\n/*\n  Acts as a message bus between the content script and the interstitial\n\n  Note: the callback passed to addListener must return true (literal) to keep\n  the messaging channel open while waiting for a response - it cannot be an\n  async function that returns a Promise that resolves to true.\n\n  Firefox evaluates both async/sync values the same way here, Chrome doesn't:\n\n  https://bugs.chromium.org/p/chromium/issues/detail?id=1185241\n*/\n\nextensionApi.message.addListener((message: any, sender, sendResponse) => {\n  if (message.event === \"getCurrentTab\") {\n    extensionApi.getCurrentTab().then(sendResponse);\n  } else if (message.event === \"fillCheckoutResult\") {\n    // The checkout script cannot make requests to the API, so pass a message\n    // to have the background script do it\n    sendRequest({\n      url: v1Api.baseURL + EVENT_ENDPOINTS.track,\n      method: \"POST\",\n      body: message.payload,\n      config: PrivacyApi.setApiHeaders({}),\n    }).then(() => sendResponse({ success: true }));\n  } else if (message.event === \"sendApiRequest\") {\n    const { url, method, params, body, config } = message.payload;\n    sendRequest({ url, method, params, body, config })\n      .then(transformFetchResponse)\n      .then(sendResponse)\n      .catch((err) => {\n        // If Fetch API errors, format it as an error Response\n        const errResponse = transformFetchError(err, url);\n        sendResponse(errResponse);\n      });\n  } else if (message.event === \"uninstallExtension\") {\n    uninstallExtension(sendResponse);\n  } else if (message.event === \"addShortLivedAuthCookie\") {\n    extensionApi.context?.cookies\n      .set(message.payload)\n      .then(sendResponse)\n      .catch((err) => {\n        sendResponse({ error: err });\n      });\n  } else {\n    sendMessageToActiveTab(message).then(sendResponse);\n  }\n\n  return true;\n});\n\nexport {};\n"],"names":["extensionApi","uuidv4","EXTENSION_EVENTS"],"mappings":"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","x_google_ignoreList":[6,7,8,9]}